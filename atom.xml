<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>鸿则的博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.hungtcs.top/"/>
  <updated>2022-08-17T02:40:45.595Z</updated>
  <id>https://blog.hungtcs.top/</id>
  
  <author>
    <name>鸿则</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>26. linux利用socat虚拟串口</title>
    <link href="https://blog.hungtcs.top/2020/06/16/26-linux%E5%88%A9%E7%94%A8socat%E8%99%9A%E6%8B%9F%E4%B8%B2%E5%8F%A3/"/>
    <id>https://blog.hungtcs.top/2020/06/16/26-linux利用socat虚拟串口/</id>
    <published>2020-06-16T05:33:22.000Z</published>
    <updated>2022-08-17T02:40:45.595Z</updated>
    
    <content type="html"><![CDATA[<p>Socat 是 Linux 下的一个多功能的网络工具，名字来由是 「Socket CAT」。其功能与有瑞士军刀之称的 Netcat 类似，可以看做是 Netcat 的加强版。</p><span id="more"></span><h3 id="Socat安装"><a href="#Socat安装" class="headerlink" title="Socat安装"></a>Socat安装</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt install socat</span><br></pre></td></tr></table></figure><h3 id="创建虚拟串口"><a href="#创建虚拟串口" class="headerlink" title="创建虚拟串口"></a>创建虚拟串口</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ socat -d -d pty,raw,echo=0 pty,raw,echo=0</span><br><span class="line">2020/06/16 13:42:10 socat[6958] N PTY is /dev/pts/2</span><br><span class="line">2020/06/16 13:42:10 socat[6958] N PTY is /dev/pts/3</span><br><span class="line">2020/06/16 13:42:10 socat[6958] N starting data transfer loop with FDs [5,5] and [7,7]</span><br></pre></td></tr></table></figure><p>现在<code>/dev/pts/2</code>和<code>/dev/pts/3</code>可以互通了</p><h3 id="帮助"><a href="#帮助" class="headerlink" title="帮助"></a>帮助</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line">$ sicat -h</span><br><span class="line">socat by Gerhard Rieger and contributors - see www.dest-unreach.org</span><br><span class="line">Usage:</span><br><span class="line">socat [options] &lt;bi-address&gt; &lt;bi-address&gt;</span><br><span class="line">   options:</span><br><span class="line">      -V     print version and feature information to stdout, and exit</span><br><span class="line">      -h|-?  print a help text describing command line options and addresses</span><br><span class="line">      -hh    like -h, plus a list of all common address option names</span><br><span class="line">      -hhh   like -hh, plus a list of all available address option names</span><br><span class="line">      -d     increase verbosity (use up to 4 times; 2 are recommended)</span><br><span class="line">      -D     analyze file descriptors before loop</span><br><span class="line">      -ly[facility]  log to syslog, using facility (default is daemon)</span><br><span class="line">      -lf&lt;logfile&gt;   log to file</span><br><span class="line">      -ls            log to stderr (default if no other log)</span><br><span class="line">      -lm[facility]  mixed log mode (stderr during initialization, then syslog)</span><br><span class="line">      -lp&lt;progname&gt;  set the program name used for logging</span><br><span class="line">      -lu            use microseconds for logging timestamps</span><br><span class="line">      -lh            add hostname to log messages</span><br><span class="line">      -v     verbose data traffic, text</span><br><span class="line">      -x     verbose data traffic, hexadecimal</span><br><span class="line">      -b&lt;size_t&gt;     set data buffer size (8192)</span><br><span class="line">      -s     sloppy (continue on error)</span><br><span class="line">      -t&lt;timeout&gt;    wait seconds before closing second channel</span><br><span class="line">      -T&lt;timeout&gt;    total inactivity timeout in seconds</span><br><span class="line">      -u     unidirectional mode (left to right)</span><br><span class="line">      -U     unidirectional mode (right to left)</span><br><span class="line">      -g     do not check option groups</span><br><span class="line">      -L &lt;lockfile&gt;  try to obtain lock, or fail</span><br><span class="line">      -W &lt;lockfile&gt;  try to obtain lock, or wait</span><br><span class="line">      -4     prefer IPv4 if version is not explicitly specified</span><br><span class="line">      -6     prefer IPv6 if version is not explicitly specified</span><br><span class="line">   bi-address:</span><br><span class="line">      pipe[,&lt;opts&gt;]groups=FD,FIFO</span><br><span class="line">      &lt;single-address&gt;!!&lt;single-address&gt;</span><br><span class="line">      &lt;single-address&gt;</span><br><span class="line">   single-address:</span><br><span class="line">      &lt;address-head&gt;[,&lt;opts&gt;]</span><br><span class="line">   address-head:</span><br><span class="line">      abstract-client:&lt;filename&gt;groups=FD,SOCKET,RETRY,UNIX</span><br><span class="line">      abstract-connect:&lt;filename&gt;groups=FD,SOCKET,RETRY,UNIX</span><br><span class="line">      abstract-listen:&lt;filename&gt;groups=FD,SOCKET,LISTEN,CHILD,RETRY,UNIX</span><br><span class="line">      abstract-recv:&lt;filename&gt;groups=FD,SOCKET,RETRY,UNIX</span><br><span class="line">      abstract-recvfrom:&lt;filename&gt;groups=FD,SOCKET,CHILD,RETRY,UNIX</span><br><span class="line">      abstract-sendto:&lt;filename&gt;groups=FD,SOCKET,RETRY,UNIX</span><br><span class="line">      create:&lt;filename&gt;groups=FD,REG,NAMED</span><br><span class="line">      exec:&lt;command-line&gt;groups=FD,FIFO,SOCKET,EXEC,FORK,TERMIOS,PTY,PARENT,UNIX</span><br><span class="line">      fd:&lt;num&gt;groups=FD,FIFO,CHR,BLK,REG,SOCKET,TERMIOS,UNIX,IP4,IP6,UDP,TCP,SCTP</span><br><span class="line">      gopen:&lt;filename&gt;groups=FD,FIFO,CHR,BLK,REG,SOCKET,NAMED,OPEN,TERMIOS,UNIX</span><br><span class="line">      interface:&lt;interface&gt;groups=FD,SOCKET</span><br><span class="line">      ip-datagram:&lt;host&gt;:&lt;protocol&gt;groups=FD,SOCKET,RANGE,IP4,IP6</span><br><span class="line">      ip-recv:&lt;protocol&gt;groups=FD,SOCKET,RANGE,IP4,IP6</span><br><span class="line">      ip-recvfrom:&lt;protocol&gt;groups=FD,SOCKET,CHILD,RANGE,IP4,IP6</span><br><span class="line">      ip-sendto:&lt;host&gt;:&lt;protocol&gt;groups=FD,SOCKET,IP4,IP6</span><br><span class="line">      ip4-datagram:&lt;host&gt;:&lt;protocol&gt;groups=FD,SOCKET,RANGE,IP4</span><br><span class="line">      ip4-recv:&lt;protocol&gt;groups=FD,SOCKET,RANGE,IP4</span><br><span class="line">      ip4-recvfrom:&lt;protocol&gt;groups=FD,SOCKET,CHILD,RANGE,IP4</span><br><span class="line">      ip4-sendto:&lt;host&gt;:&lt;protocol&gt;groups=FD,SOCKET,IP4</span><br><span class="line">      ip6-datagram:&lt;host&gt;:&lt;protocol&gt;groups=FD,SOCKET,RANGE,IP6</span><br><span class="line">      ip6-recv:&lt;protocol&gt;groups=FD,SOCKET,RANGE,IP6</span><br><span class="line">      ip6-recvfrom:&lt;protocol&gt;groups=FD,SOCKET,CHILD,RANGE,IP6</span><br><span class="line">      ip6-sendto:&lt;host&gt;:&lt;protocol&gt;groups=FD,SOCKET,IP6</span><br><span class="line">      open:&lt;filename&gt;groups=FD,FIFO,CHR,BLK,REG,NAMED,OPEN,TERMIOS</span><br><span class="line">      openssl:&lt;host&gt;:&lt;port&gt;groups=FD,SOCKET,CHILD,RETRY,IP4,IP6,TCP,OPENSSL</span><br><span class="line">      openssl-listen:&lt;port&gt;groups=FD,SOCKET,LISTEN,CHILD,RETRY,RANGE,IP4,IP6,TCP,OPENSSL</span><br><span class="line">      pipe:&lt;filename&gt;groups=FD,FIFO,NAMED,OPEN</span><br><span class="line">      proxy:&lt;proxy-server&gt;:&lt;host&gt;:&lt;port&gt;groups=FD,SOCKET,CHILD,RETRY,IP4,IP6,TCP,HTTP</span><br><span class="line">      ptygroups=FD,NAMED,TERMIOS,PTY</span><br><span class="line">      sctp-connect:&lt;host&gt;:&lt;port&gt;groups=FD,SOCKET,CHILD,RETRY,IP4,IP6,SCTP</span><br><span class="line">      sctp-listen:&lt;port&gt;groups=FD,SOCKET,LISTEN,CHILD,RETRY,RANGE,IP4,IP6,SCTP</span><br><span class="line">      sctp4-connect:&lt;host&gt;:&lt;port&gt;groups=FD,SOCKET,CHILD,RETRY,IP4,SCTP</span><br><span class="line">      sctp4-listen:&lt;port&gt;groups=FD,SOCKET,LISTEN,CHILD,RETRY,RANGE,IP4,SCTP</span><br><span class="line">      sctp6-connect:&lt;host&gt;:&lt;port&gt;groups=FD,SOCKET,CHILD,RETRY,IP6,SCTP</span><br><span class="line">      sctp6-listen:&lt;port&gt;groups=FD,SOCKET,LISTEN,CHILD,RETRY,RANGE,IP6,SCTP</span><br><span class="line">      socket-connect:&lt;domain&gt;:&lt;protocol&gt;:&lt;remote-address&gt;groups=FD,SOCKET,CHILD,RETRY</span><br><span class="line">      socket-datagram:&lt;domain&gt;:&lt;type&gt;:&lt;protocol&gt;:&lt;remote-address&gt;groups=FD,SOCKET,RANGE</span><br><span class="line">      socket-listen:&lt;domain&gt;:&lt;protocol&gt;:&lt;local-address&gt;groups=FD,SOCKET,LISTEN,CHILD,RETRY,RANGE</span><br><span class="line">      socket-recv:&lt;domain&gt;:&lt;type&gt;:&lt;protocol&gt;:&lt;local-address&gt;groups=FD,SOCKET,RANGE</span><br><span class="line">      socket-recvfrom:&lt;domain&gt;:&lt;type&gt;:&lt;protocol&gt;:&lt;local-address&gt;groups=FD,SOCKET,CHILD,RANGE</span><br><span class="line">      socket-sendto:&lt;domain&gt;:&lt;type&gt;:&lt;protocol&gt;:&lt;remote-address&gt;groups=FD,SOCKET</span><br><span class="line">      socks4:&lt;socks-server&gt;:&lt;host&gt;:&lt;port&gt;groups=FD,SOCKET,CHILD,RETRY,IP4,IP6,TCP,SOCKS4</span><br><span class="line">      socks4a:&lt;socks-server&gt;:&lt;host&gt;:&lt;port&gt;groups=FD,SOCKET,CHILD,RETRY,IP4,IP6,TCP,SOCKS4</span><br><span class="line">      stderrgroups=FD,FIFO,CHR,BLK,REG,SOCKET,TERMIOS,UNIX,IP4,IP6,UDP,TCP,SCTP</span><br><span class="line">      stdingroups=FD,FIFO,CHR,BLK,REG,SOCKET,TERMIOS,UNIX,IP4,IP6,UDP,TCP,SCTP</span><br><span class="line">      stdiogroups=FD,FIFO,CHR,BLK,REG,SOCKET,TERMIOS,UNIX,IP4,IP6,UDP,TCP,SCTP</span><br><span class="line">      stdoutgroups=FD,FIFO,CHR,BLK,REG,SOCKET,TERMIOS,UNIX,IP4,IP6,UDP,TCP,SCTP</span><br><span class="line">      system:&lt;shell-command&gt;groups=FD,FIFO,SOCKET,EXEC,FORK,TERMIOS,PTY,PARENT,UNIX</span><br><span class="line">      tcp-connect:&lt;host&gt;:&lt;port&gt;groups=FD,SOCKET,CHILD,RETRY,IP4,IP6,TCP</span><br><span class="line">      tcp-listen:&lt;port&gt;groups=FD,SOCKET,LISTEN,CHILD,RETRY,RANGE,IP4,IP6,TCP</span><br><span class="line">      tcp4-connect:&lt;host&gt;:&lt;port&gt;groups=FD,SOCKET,CHILD,RETRY,IP4,TCP</span><br><span class="line">      tcp4-listen:&lt;port&gt;groups=FD,SOCKET,LISTEN,CHILD,RETRY,RANGE,IP4,TCP</span><br><span class="line">      tcp6-connect:&lt;host&gt;:&lt;port&gt;groups=FD,SOCKET,CHILD,RETRY,IP6,TCP</span><br><span class="line">      tcp6-listen:&lt;port&gt;groups=FD,SOCKET,LISTEN,CHILD,RETRY,RANGE,IP6,TCP</span><br><span class="line">      tun[:&lt;ip-addr&gt;/&lt;bits&gt;]groups=FD,CHR,NAMED,OPEN,INTERFACE</span><br><span class="line">      udp-connect:&lt;host&gt;:&lt;port&gt;groups=FD,SOCKET,IP4,IP6,UDP</span><br><span class="line">      udp-datagram:&lt;host&gt;:&lt;port&gt;groups=FD,SOCKET,RANGE,IP4,IP6,UDP</span><br><span class="line">      udp-listen:&lt;port&gt;groups=FD,SOCKET,LISTEN,CHILD,RANGE,IP4,IP6,UDP</span><br><span class="line">      udp-recv:&lt;port&gt;groups=FD,SOCKET,RANGE,IP4,IP6,UDP</span><br><span class="line">      udp-recvfrom:&lt;port&gt;groups=FD,SOCKET,CHILD,RANGE,IP4,IP6,UDP</span><br><span class="line">      udp-sendto:&lt;host&gt;:&lt;port&gt;groups=FD,SOCKET,IP4,IP6,UDP</span><br><span class="line">      udp4-connect:&lt;host&gt;:&lt;port&gt;groups=FD,SOCKET,IP4,UDP</span><br><span class="line">      udp4-datagram:&lt;remote-address&gt;:&lt;port&gt;groups=FD,SOCKET,RANGE,IP4,UDP</span><br><span class="line">      udp4-listen:&lt;port&gt;groups=FD,SOCKET,LISTEN,CHILD,RANGE,IP4,UDP</span><br><span class="line">      udp4-recv:&lt;port&gt;groups=FD,SOCKET,RANGE,IP4,UDP</span><br><span class="line">      udp4-recvfrom:&lt;host&gt;:&lt;port&gt;groups=FD,SOCKET,CHILD,RANGE,IP4,UDP</span><br><span class="line">      udp4-sendto:&lt;host&gt;:&lt;port&gt;groups=FD,SOCKET,IP4,UDP</span><br><span class="line">      udp6-connect:&lt;host&gt;:&lt;port&gt;groups=FD,SOCKET,IP6,UDP</span><br><span class="line">      udp6-datagram:&lt;host&gt;:&lt;port&gt;groups=FD,SOCKET,RANGE,IP6,UDP</span><br><span class="line">      udp6-listen:&lt;port&gt;groups=FD,SOCKET,LISTEN,CHILD,RANGE,IP6,UDP</span><br><span class="line">      udp6-recv:&lt;port&gt;groups=FD,SOCKET,RANGE,IP6,UDP</span><br><span class="line">      udp6-recvfrom:&lt;port&gt;groups=FD,SOCKET,CHILD,RANGE,IP6,UDP</span><br><span class="line">      udp6-sendto:&lt;host&gt;:&lt;port&gt;groups=FD,SOCKET,IP6,UDP</span><br><span class="line">      unix-client:&lt;filename&gt;groups=FD,SOCKET,NAMED,RETRY,UNIX</span><br><span class="line">      unix-connect:&lt;filename&gt;groups=FD,SOCKET,NAMED,RETRY,UNIX</span><br><span class="line">      unix-listen:&lt;filename&gt;groups=FD,SOCKET,NAMED,LISTEN,CHILD,RETRY,UNIX</span><br><span class="line">      unix-recv:&lt;filename&gt;groups=FD,SOCKET,NAMED,RETRY,UNIX</span><br><span class="line">      unix-recvfrom:&lt;filename&gt;groups=FD,SOCKET,NAMED,CHILD,RETRY,UNIX</span><br><span class="line">      unix-sendto:&lt;filename&gt;groups=FD,SOCKET,NAMED,RETRY,UNIX</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Socat 是 Linux 下的一个多功能的网络工具，名字来由是 「Socket CAT」。其功能与有瑞士军刀之称的 Netcat 类似，可以看做是 Netcat 的加强版。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://blog.hungtcs.top/categories/Linux/"/>
    
      <category term="Softwares" scheme="https://blog.hungtcs.top/categories/Linux/Softwares/"/>
    
    
      <category term="linux" scheme="https://blog.hungtcs.top/tags/linux/"/>
    
      <category term="serial" scheme="https://blog.hungtcs.top/tags/serial/"/>
    
      <category term="socat" scheme="https://blog.hungtcs.top/tags/socat/"/>
    
  </entry>
  
  <entry>
    <title>25. sdcc编译器编译步骤</title>
    <link href="https://blog.hungtcs.top/2020/05/22/25-sdcc%E7%BC%96%E8%AF%91%E5%99%A8%E7%BC%96%E8%AF%91%E6%AD%A5%E9%AA%A4/"/>
    <id>https://blog.hungtcs.top/2020/05/22/25-sdcc编译器编译步骤/</id>
    <published>2020-05-22T03:49:52.000Z</published>
    <updated>2022-08-17T02:40:45.595Z</updated>
    
    <content type="html"><![CDATA[<ol><li>下载sdcc源码<ul><li><a href="http://sdcc.sourceforge.net">http://sdcc.sourceforge.net</a></li></ul></li><li>解压 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xjvf sdcc-src-4.0.0.tar.bz2</span><br><span class="line">cd sdcc-4.0.0</span><br></pre></td></tr></table></figure></li><li>安装依赖 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install flex bison texinfo libboost1.62-dev</span><br></pre></td></tr></table></figure><span id="more"></span></li><li>configure 禁用不必要的芯片支持，只保留mcs51和stm8 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./configure --disable-z80-port --disable-z180-port --disable-r2k-port --disable-r3ka-port --disable-gbz80-port --disable-tlcs90-port --disable-ez80_z80-port --disable-ds390-port --disable-ds400-port --disable-pic14-port --disable-pic16-port --disable-hc08-port --disable-s08-port --disable-pdk13-port --disable-pdk14-port --disable-pdk15-port</span><br></pre></td></tr></table></figure></li><li>编译安装 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      sdcc 源码安装
    
    </summary>
    
    
      <category term="sdcc" scheme="https://blog.hungtcs.top/tags/sdcc/"/>
    
  </entry>
  
  <entry>
    <title>24. rsync+inotify-tools实现文件夹双向同步</title>
    <link href="https://blog.hungtcs.top/2020/03/13/24-rsync-inotify-tools%E5%AE%9E%E7%8E%B0%E6%96%87%E4%BB%B6%E5%A4%B9%E5%8F%8C%E5%90%91%E5%90%8C%E6%AD%A5/"/>
    <id>https://blog.hungtcs.top/2020/03/13/24-rsync-inotify-tools实现文件夹双向同步/</id>
    <published>2020-03-13T03:39:55.000Z</published>
    <updated>2022-08-17T02:40:45.595Z</updated>
    
    <content type="html"><![CDATA[<p>基于Ubuntu Linux，适用于大多数Debian发行版。</p><h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">操作系统：Ubuntu 18.04</span><br><span class="line">文件夹：</span><br><span class="line">  - /home/hungtcs/Temp/d1</span><br><span class="line">  - /home/hungtcs/Temp/d2</span><br></pre></td></tr></table></figure><span id="more"></span><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install rsync inotify-tools</span><br></pre></td></tr></table></figure><h3 id="rsync主要参数"><a href="#rsync主要参数" class="headerlink" title="rsync主要参数"></a>rsync主要参数</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">--links             copy symlinks as symlinks</span><br><span class="line">--delete            允许删除文件</span><br><span class="line">--sparse            handle sparse files efficiently</span><br><span class="line">--backup            make backups (see --suffix &amp; --backup-dir)</span><br><span class="line">--backup-dir=DIR    make backups into hierarchy based in DIR</span><br><span class="line">--archive           archive mode; equals -rlptgoD (no -H,-A,-X)</span><br><span class="line">--verbose           显示详细输出</span><br><span class="line">--recursive         递归同步文件夹内容</span><br><span class="line">--human-readable    output numbers in a human-readable format</span><br></pre></td></tr></table></figure><h3 id="同步文件夹d1到d2"><a href="#同步文件夹d1到d2" class="headerlink" title="同步文件夹d1到d2"></a>同步文件夹<code>d1</code>到<code>d2</code></h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rsync --verbose --recursive --archive --delete --human-readable --sparse ./d1/ ./d2/</span><br></pre></td></tr></table></figure><h3 id="监听文件更改"><a href="#监听文件更改" class="headerlink" title="监听文件更改"></a>监听文件更改</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">inotifywait --recursive --event=modify,create,delete,move ./d1</span><br></pre></td></tr></table></figure><h3 id="监听文件夹d1改动并同步d2"><a href="#监听文件夹d1改动并同步d2" class="headerlink" title="监听文件夹d1改动并同步d2"></a>监听文件夹<code>d1</code>改动并同步<code>d2</code></h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">while inotifywait --recursive --event=modify,create,delete,move ./d1; do</span><br><span class="line">  rsync --verbose --recursive --archive --delete --human-readable --sparse ./d1/ ./d2/</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h3 id="监听文件夹d2改动并同步到d1"><a href="#监听文件夹d2改动并同步到d1" class="headerlink" title="监听文件夹d2改动并同步到d1"></a>监听文件夹<code>d2</code>改动并同步到<code>d1</code></h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">while inotifywait --recursive --event=modify,create,delete,move ./d2; do</span><br><span class="line">  rsync --verbose --recursive --archive --delete --human-readable --sparse ./d2/ ./d1/</span><br><span class="line">done</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;基于Ubuntu Linux，适用于大多数Debian发行版。&lt;/p&gt;
&lt;h3 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;headerlink&quot; title=&quot;环境&quot;&gt;&lt;/a&gt;环境&lt;/h3&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;操作系统：Ubuntu 18.04&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;文件夹：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  - /home/hungtcs/Temp/d1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  - /home/hungtcs/Temp/d2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://blog.hungtcs.top/categories/Linux/"/>
    
    
      <category term="rsync" scheme="https://blog.hungtcs.top/tags/rsync/"/>
    
  </entry>
  
  <entry>
    <title>23. K8S安装过程笔记</title>
    <link href="https://blog.hungtcs.top/2019/11/27/23-K8S%E5%AE%89%E8%A3%85%E8%BF%87%E7%A8%8B%E7%AC%94%E8%AE%B0/"/>
    <id>https://blog.hungtcs.top/2019/11/27/23-K8S安装过程笔记/</id>
    <published>2019-11-27T11:30:40.000Z</published>
    <updated>2022-08-17T02:40:45.595Z</updated>
    
    <content type="html"><![CDATA[<p>以下所有操作均基于Cent OS 7操作系统。</p><p>视频教程连接：<a href="https://www.bilibili.com/video/av76793551">Bilibili</a> <a href="https://www.youtube.com/watch?v=ACypx1rwm6g">Youtube</a></p><span id="more"></span><h3 id="基本环境配置"><a href="#基本环境配置" class="headerlink" title="基本环境配置"></a>基本环境配置</h3><ol><li>关闭selinux<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">setenforce 0</span><br><span class="line">sed -i &quot;s/SELINUX=enforcing/SELINUX=disabled/g&quot; /etc/selinux/config</span><br></pre></td></tr></table></figure></li><li>关闭swap分区或禁用swap文件<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">swapoff -a</span><br><span class="line"># 注释掉关于swap分区的行</span><br><span class="line">yes | cp /etc/fstab /etc/fstab_bak</span><br><span class="line">cat /etc/fstab_bak |grep -v swap &gt; /etc/fstab</span><br></pre></td></tr></table></figure></li><li>修改网卡配置<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ vim /etc/sysctl.conf</span><br><span class="line">net.ipv4.ip_forward = 1</span><br><span class="line">net.bridge.bridge-nf-call-iptables = 1</span><br><span class="line">net.bridge.bridge-nf-call-ip6tables = 1</span><br><span class="line">$ sysctl -p</span><br></pre></td></tr></table></figure></li><li>启用内核模块<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">modprobe -- ip_vs</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">modprobe -- ip_vs_rr</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">modprobe -- ip_vs_wrr</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">modprobe -- ip_vs_sh</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">modprobe -- nf_conntrack_ipv4</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cut</span> -f1 -d <span class="string">&quot; &quot;</span>  /proc/modules | grep -e ip_vs -e nf_conntrack_ipv4</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">vim /etc/sysconfig/modules/ipvs.modules</span></span><br><span class="line">modprobe -- ip_vs</span><br><span class="line">modprobe -- ip_vs_rr</span><br><span class="line">modprobe -- ip_vs_wrr</span><br><span class="line">modprobe -- ip_vs_sh</span><br><span class="line">modprobe -- nf_conntrack_ipv4</span><br></pre></td></tr></table></figure></li><li>关闭防火墙<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">systemctl stop firewalld</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">systemctl <span class="built_in">disable</span> firewalld</span></span><br></pre></td></tr></table></figure></li><li>配置hosts</li></ol><h3 id="kubectl、kubeadm、kubelet的安装"><a href="#kubectl、kubeadm、kubelet的安装" class="headerlink" title="kubectl、kubeadm、kubelet的安装"></a>kubectl、kubeadm、kubelet的安装</h3><h4 id="添加Kubernetes的yum源"><a href="#添加Kubernetes的yum源" class="headerlink" title="添加Kubernetes的yum源"></a>添加Kubernetes的yum源</h4><p>此处使用alibaba的镜像源<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$</span><span class="language-bash">vim /etc/yum.repos.d/kubernetes.repo</span></span><br><span class="line">[kubernetes]</span><br><span class="line">name=Kubernetes</span><br><span class="line">baseurl=http://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=0</span><br><span class="line">repo_gpgcheck=0</span><br><span class="line">gpgkey=http://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg</span><br><span class="line">http://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg</span><br></pre></td></tr></table></figure></p><h4 id="安装kubelet、kubeadm、kubectl"><a href="#安装kubelet、kubeadm、kubectl" class="headerlink" title="安装kubelet、kubeadm、kubectl"></a>安装kubelet、kubeadm、kubectl</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">yum install -y kubelet kubeadm kubectl</span></span><br></pre></td></tr></table></figure><h4 id="启动kubelet服务"><a href="#启动kubelet服务" class="headerlink" title="启动kubelet服务"></a>启动kubelet服务</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">systemctl <span class="built_in">enable</span> kubelet</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">systemctl start kubelet</span></span><br></pre></td></tr></table></figure><p>此时执行<code>systemctl  status kubelet</code>查看服务状态，服务状态应为Error(255)，如果是其他错误可使用<code>journalctl -xe</code>查看错误信息。</p><h3 id="Docker安装和配置"><a href="#Docker安装和配置" class="headerlink" title="Docker安装和配置"></a>Docker安装和配置</h3><h4 id="Docker安装"><a href="#Docker安装" class="headerlink" title="Docker安装"></a>Docker安装</h4><p>docker的安装请查看官网文档(Overview of Docker editions)[<a href="https://docs.docker.com/install/overview/]">https://docs.docker.com/install/overview/]</a></p><h4 id="Docker配置"><a href="#Docker配置" class="headerlink" title="Docker配置"></a>Docker配置</h4><ol><li>配置cgroup-driver为systemd<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看cgroup-driver</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker info | grep -i cgroup</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">追加 --exec-opt native.cgroupdriver=systemd 参数</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sed -i <span class="string">&quot;s#^ExecStart=/usr/bin/dockerd.*#ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock --exec-opt native.cgroupdriver=systemd#g&quot;</span> /usr/lib/systemd/system/docker.service</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">systemctl daemon-reload <span class="comment"># 重新加载服务</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">systemctl <span class="built_in">enable</span> docker <span class="comment"># 启用docker服务(开机自起)</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">systemctl restart docker <span class="comment"># 启动docker服务</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">或者修改docker配置文件</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">vim /etc/docker/daemon.json</span></span><br><span class="line">&#123;</span><br><span class="line">  &quot;exec-opts&quot;: [&quot;native.cgroupdriver=systemd&quot;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>预先拉取所需镜像<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看kubeadm所需镜像</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">kubeadm config images list</span></span><br><span class="line">k8s.gcr.io/kube-apiserver:v1.16.3</span><br><span class="line">k8s.gcr.io/kube-controller-manager:v1.16.3</span><br><span class="line">k8s.gcr.io/kube-scheduler:v1.16.3</span><br><span class="line">k8s.gcr.io/kube-proxy:v1.16.3</span><br><span class="line">k8s.gcr.io/pause:3.1</span><br><span class="line">k8s.gcr.io/etcd:3.3.15-0</span><br><span class="line">k8s.gcr.io/coredns:1.6.2</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">拉取镜像</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker pull kubeimage/kube-apiserver-amd64:v1.16.3</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker pull kubeimage/kube-controller-manager-amd64:v1.16.3</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker pull kubeimage/kube-scheduler-amd64:v1.16.3</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker pull kubeimage/kube-proxy-amd64:v1.16.3</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker pull kubeimage/pause-amd64:3.1</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker pull kubeimage/etcd-amd64:3.3.15-0</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker pull coredns/coredns:1.6.2</span></span><br></pre></td></tr></table></figure></li><li>对预先拉取的镜像重新打tag<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker tag kubeimage/kube-apiserver-amd64:v1.16.3  k8s.gcr.io/kube-apiserver:v1.16.3</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker tag kubeimage/kube-controller-manager-amd64:v1.16.3  k8s.gcr.io/kube-controller-manager:v1.16.3</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker tag kubeimage/kube-scheduler-amd64:v1.16.3  k8s.gcr.io/kube-scheduler:v1.16.3</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker tag kubeimage/kube-proxy-amd64:v1.16.3 k8s.gcr.io/kube-proxy:v1.16.3</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker tag kubeimage/pause-amd64:3.1 k8s.gcr.io/pause:3.1</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker tag kubeimage/etcd-amd64:3.3.15-0 k8s.gcr.io/etcd:3.3.15-0</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker tag coredns/coredns:1.6.2 k8s.gcr.io/coredns:1.6.2</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="Master节点的配置"><a href="#Master节点的配置" class="headerlink" title="Master节点的配置"></a>Master节点的配置</h3><p><strong><em>以上步骤需要在node节点和master节点执行，当前步骤仅需在master节点执行。</em></strong></p><h4 id="Master节点的初始化"><a href="#Master节点的初始化" class="headerlink" title="Master节点的初始化"></a>Master节点的初始化</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">初始化master节点，</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">--pod-network-cidr=192.168.0.0/16 指定使用Calico网络</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">--apiserver-advertise-address=10.0.0.5 指向master节点IP，此处也可以使用hosts</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">kubeadm init --pod-network-cidr=10.244.0.0/16 \</span></span><br><span class="line"><span class="language-bash">  --kubernetes-version=v1.16.3 \</span></span><br><span class="line"><span class="language-bash">  --apiserver-advertise-address=10.0.0.5</span></span><br></pre></td></tr></table></figure><p>执行上述命令的输出为：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">[init] Using Kubernetes version: v1.16.3</span><br><span class="line">[preflight] Running pre-flight checks</span><br><span class="line">[WARNING SystemVerification]: this Docker version is not on the list of validated versions: 19.03.4. Latest validated version: 18.09</span><br><span class="line">[preflight] Pulling images required for setting up a Kubernetes cluster</span><br><span class="line">[preflight] This might take a minute or two, depending on the speed of your internet connection</span><br><span class="line">[preflight] You can also perform this action in beforehand using &#x27;kubeadm config images pull&#x27;</span><br><span class="line">[kubelet-start] Writing kubelet environment file with flags to file &quot;/var/lib/kubelet/kubeadm-flags.env&quot;</span><br><span class="line">[kubelet-start] Writing kubelet configuration to file &quot;/var/lib/kubelet/config.yaml&quot;</span><br><span class="line">[kubelet-start] Activating the kubelet service</span><br><span class="line">[certs] Using certificateDir folder &quot;/etc/kubernetes/pki&quot;</span><br><span class="line">[certs] Generating &quot;ca&quot; certificate and key</span><br><span class="line">[certs] Generating &quot;apiserver&quot; certificate and key</span><br><span class="line">[certs] apiserver serving cert is signed for DNS names [master kubernetes kubernetes.default kubernetes.default.svc kubernetes.default.svc.cluster.local] and IPs [10.96.0.1 10.0.0.5]</span><br><span class="line">[certs] Generating &quot;apiserver-kubelet-client&quot; certificate and key</span><br><span class="line">[certs] Generating &quot;front-proxy-ca&quot; certificate and key</span><br><span class="line">[certs] Generating &quot;front-proxy-client&quot; certificate and key</span><br><span class="line">[certs] Generating &quot;etcd/ca&quot; certificate and key</span><br><span class="line">[certs] Generating &quot;etcd/server&quot; certificate and key</span><br><span class="line">[certs] etcd/server serving cert is signed for DNS names [master localhost] and IPs [10.0.0.5 127.0.0.1 ::1]</span><br><span class="line">[certs] Generating &quot;etcd/peer&quot; certificate and key</span><br><span class="line">[certs] etcd/peer serving cert is signed for DNS names [master localhost] and IPs [10.0.0.5 127.0.0.1 ::1]</span><br><span class="line">[certs] Generating &quot;etcd/healthcheck-client&quot; certificate and key</span><br><span class="line">[certs] Generating &quot;apiserver-etcd-client&quot; certificate and key</span><br><span class="line">[certs] Generating &quot;sa&quot; key and public key</span><br><span class="line">[kubeconfig] Using kubeconfig folder &quot;/etc/kubernetes&quot;</span><br><span class="line">[kubeconfig] Writing &quot;admin.conf&quot; kubeconfig file</span><br><span class="line">[kubeconfig] Writing &quot;kubelet.conf&quot; kubeconfig file</span><br><span class="line">[kubeconfig] Writing &quot;controller-manager.conf&quot; kubeconfig file</span><br><span class="line">[kubeconfig] Writing &quot;scheduler.conf&quot; kubeconfig file</span><br><span class="line">[control-plane] Using manifest folder &quot;/etc/kubernetes/manifests&quot;</span><br><span class="line">[control-plane] Creating static Pod manifest for &quot;kube-apiserver&quot;</span><br><span class="line">[control-plane] Creating static Pod manifest for &quot;kube-controller-manager&quot;</span><br><span class="line">[control-plane] Creating static Pod manifest for &quot;kube-scheduler&quot;</span><br><span class="line">[etcd] Creating static Pod manifest for local etcd in &quot;/etc/kubernetes/manifests&quot;</span><br><span class="line">[wait-control-plane] Waiting for the kubelet to boot up the control plane as static Pods from directory &quot;/etc/kubernetes/manifests&quot;. This can take up to 4m0s</span><br><span class="line">[apiclient] All control plane components are healthy after 13.002108 seconds</span><br><span class="line">[upload-config] Storing the configuration used in ConfigMap &quot;kubeadm-config&quot; in the &quot;kube-system&quot; Namespace</span><br><span class="line">[kubelet] Creating a ConfigMap &quot;kubelet-config-1.16&quot; in namespace kube-system with the configuration for the kubelets in the cluster</span><br><span class="line">[upload-certs] Skipping phase. Please see --upload-certs</span><br><span class="line">[mark-control-plane] Marking the node master as control-plane by adding the label &quot;node-role.kubernetes.io/master=&#x27;&#x27;&quot;</span><br><span class="line">[mark-control-plane] Marking the node master as control-plane by adding the taints [node-role.kubernetes.io/master:NoSchedule]</span><br><span class="line">[bootstrap-token] Using token: kt58np.djd3youoqb0bnz4r</span><br><span class="line">[bootstrap-token] Configuring bootstrap tokens, cluster-info ConfigMap, RBAC Roles</span><br><span class="line">[bootstrap-token] configured RBAC rules to allow Node Bootstrap tokens to post CSRs in order for nodes to get long term certificate credentials</span><br><span class="line">[bootstrap-token] configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token</span><br><span class="line">[bootstrap-token] configured RBAC rules to allow certificate rotation for all node client certificates in the cluster</span><br><span class="line">[bootstrap-token] Creating the &quot;cluster-info&quot; ConfigMap in the &quot;kube-public&quot; namespace</span><br><span class="line">[addons] Applied essential addon: CoreDNS</span><br><span class="line">[addons] Applied essential addon: kube-proxy</span><br><span class="line"></span><br><span class="line">Your Kubernetes control-plane has initialized successfully!</span><br><span class="line"></span><br><span class="line">To start using your cluster, you need to run the following as a regular user:</span><br><span class="line"></span><br><span class="line">  mkdir -p $HOME/.kube</span><br><span class="line">  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config</span><br><span class="line">  sudo chown $(id -u):$(id -g) $HOME/.kube/config</span><br><span class="line"></span><br><span class="line">You should now deploy a pod network to the cluster.</span><br><span class="line">Run &quot;kubectl apply -f [podnetwork].yaml&quot; with one of the options listed at:</span><br><span class="line">  https://kubernetes.io/docs/concepts/cluster-administration/addons/</span><br><span class="line"></span><br><span class="line">Then you can join any number of worker nodes by running the following on each as root:</span><br><span class="line"></span><br><span class="line">kubeadm join 10.0.0.5:6443 --token kt58np.djd3youoqb0bnz4r \</span><br><span class="line">    --discovery-token-ca-cert-hash sha256:37a3924142dc6d57eac2714e539c174ee3b0cda723746ada2464ac9e8a2091ce</span><br></pre></td></tr></table></figure></p><p>保存输出中的<code>kubeadm join</code>部分内容，用于添加node节点，或者使用<code>kubeadm token list</code> 和<code>kubeadm token create --print-join-command</code>查看</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">kubeadm <span class="built_in">join</span> 10.0.0.5:6443 --token kt58np.djd3youoqb0bnz4r \</span></span><br><span class="line"><span class="language-bash">--discovery-token-ca-cert-hash sha256:37a3924142dc6d57eac2714e539c174ee3b0cda723746ada2464ac9e8a2091ce</span></span><br></pre></td></tr></table></figure><p>接下来执行剩余的初始化步骤<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">mkdir</span> -p <span class="variable">$HOME</span>/.kube</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo <span class="built_in">cp</span> -i /etc/kubernetes/admin.conf <span class="variable">$HOME</span>/.kube/config</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo <span class="built_in">chown</span> $(<span class="built_in">id</span> -u):$(<span class="built_in">id</span> -g) <span class="variable">$HOME</span>/.kube/config</span></span><br></pre></td></tr></table></figure></p><h4 id="Calico网络插件的配置"><a href="#Calico网络插件的配置" class="headerlink" title="Calico网络插件的配置"></a>Calico网络插件的配置</h4><p>Calico的官方文档地址为： <a href="https://docs.projectcalico.org/v3.10/getting-started/kubernetes/。">https://docs.projectcalico.org/v3.10/getting-started/kubernetes/。</a>具体安装步骤：</p><ol><li>安装Calico<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">kubectl apply -f https://docs.projectcalico.org/v3.10/manifests/calico.yaml</span></span><br></pre></td></tr></table></figure></li><li>监听安装进度<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ watch kubectl get pods --all-namespaces</span><br></pre></td></tr></table></figure>出现以下内容时为安装成功<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">NAMESPACE    NAME                                       READY  STATUS   RESTARTS  AGE</span><br><span class="line">kube-system  calico-kube-controllers-6ff88bf6d4-tgtzb   1/1    Running  0         2m45s</span><br><span class="line">kube-system  calico-node-24h85                          1/1    Running  0         2m43s</span><br><span class="line">kube-system  coredns-846jhw23g9-9af73                   1/1    Running  0         4m5s</span><br><span class="line">kube-system  coredns-846jhw23g9-hmswk                   1/1    Running  0         4m5s</span><br><span class="line">kube-system  etcd-jbaker-1                              1/1    Running  0         6m22s</span><br><span class="line">kube-system  kube-apiserver-jbaker-1                    1/1    Running  0         6m12s</span><br><span class="line">kube-system  kube-controller-manager-jbaker-1           1/1    Running  0         6m16s</span><br><span class="line">kube-system  kube-proxy-8fzp2                           1/1    Running  0         5m16s</span><br><span class="line">kube-system  kube-scheduler-jbaker-1                    1/1    Running  0         5m41s</span><br></pre></td></tr></table></figure></li><li>测试<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">kubectl get nodes -o wide</span></span><br><span class="line">NAME                STATUS     ROLES    AGE     VERSION   INTERNAL-IP      EXTERNAL-IP   OS-IMAGE                KERNEL-VERSION           CONTAINER-RUNTIME</span><br><span class="line">kubernetes-master   Ready      master   4d12h   v1.16.3   192.168.56.101   &lt;none&gt;        CentOS Linux 7 (Core)   3.10.0-1062.el7.x86_64   docker://19.3.4</span><br></pre></td></tr></table></figure></li></ol><h3 id="Node节点的初始化"><a href="#Node节点的初始化" class="headerlink" title="Node节点的初始化"></a>Node节点的初始化</h3><ol><li>登录node节点，执行加入集群的命令，完成加入集群操作<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">kubeadm <span class="built_in">join</span> 10.0.0.5:6443 --token kt58np.djd3youoqb0bnz4r \</span></span><br><span class="line"><span class="language-bash">    --discovery-token-ca-cert-hash sha256:37a3924142dc6d57eac2714e539c174ee3b0cda723746ada2464ac9e8a2091ce</span></span><br></pre></td></tr></table></figure></li><li>在master节点上查看添加结果<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">kubectl get nodes -o wide</span></span><br><span class="line">NAME                STATUS     ROLES    AGE     VERSION   INTERNAL-IP      EXTERNAL-IP   OS-IMAGE                KERNEL-VERSION           CONTAINER-RUNTIME</span><br><span class="line">kubernetes-master   Ready      master   4d12h   v1.16.3   192.168.56.101   &lt;none&gt;        CentOS Linux 7 (Core)   3.10.0-1062.el7.x86_64   docker://19.3.4</span><br><span class="line">kubernetes-node-1   Ready      &lt;none&gt;   4d12h   v1.16.3   192.168.56.102   &lt;none&gt;        CentOS Linux 7 (Core)   3.10.0-1062.el7.x86_64   docker://19.3.4</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;以下所有操作均基于Cent OS 7操作系统。&lt;/p&gt;
&lt;p&gt;视频教程连接：&lt;a href=&quot;https://www.bilibili.com/video/av76793551&quot;&gt;Bilibili&lt;/a&gt; &lt;a href=&quot;https://www.youtube.com/watch?v=ACypx1rwm6g&quot;&gt;Youtube&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Kubernetes" scheme="https://blog.hungtcs.top/tags/Kubernetes/"/>
    
      <category term="K8S" scheme="https://blog.hungtcs.top/tags/K8S/"/>
    
      <category term="Docker" scheme="https://blog.hungtcs.top/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>22. 简单实现类似Angular的依赖注入功能</title>
    <link href="https://blog.hungtcs.top/2019/09/06/22-%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0%E7%B1%BB%E4%BC%BCAngular%E7%9A%84%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%E5%8A%9F%E8%83%BD/"/>
    <id>https://blog.hungtcs.top/2019/09/06/22-简单实现类似Angular的依赖注入功能/</id>
    <published>2019-09-06T05:32:33.000Z</published>
    <updated>2022-08-17T02:40:45.594Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>依赖注入是一个很重要的设计模式。 它使用得非常广泛，以至于几乎每个人都把它简称为 DI 。Angular 有自己的依赖注入框架，离开它，你几乎没办法构建出 Angular 应用。</p></blockquote><p>下面介绍一种简单的（只有100行左右代码）实现类似Angular依赖注入的方式，先看一个例子</p><span id="more"></span><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// a.service.ts</span></span><br><span class="line"><span class="meta">@Injectable</span>()</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">AService</span> &#123;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="title function_">doSomething</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;this is AService::doSomething&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// b.service.ts</span></span><br><span class="line"><span class="meta">@Injectable</span>()</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">BService</span> &#123;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params"><span class="keyword">private</span> <span class="keyword">readonly</span> a: AService</span>) &#123;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="title function_">doSomething</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">a</span>.<span class="title function_">doSomething</span>();</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;this is BService::doSomething&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// some.module.ts</span></span><br><span class="line"><span class="meta">@Module</span>(&#123;</span><br><span class="line">  <span class="attr">providers</span>: [</span><br><span class="line">    <span class="title class_">AService</span>,</span><br><span class="line">    <span class="title class_">BService</span>,</span><br><span class="line">  ],</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">SomeModule</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在上面的例子中，我们创建了两个<code>Service</code>，其中<code>BService</code>依赖于<code>AService</code>，那么<code>BService</code>可以在其构造函数中声明其依赖，我们需要一种方法去自动将<code>AService</code>的实例注入到<code>BService</code>的私有只读变量<code>a</code>中，接下来介绍实现的步骤。</p><p>首先我们应该对<code>Typescript</code>进行配置，使其支持<code>Javascript</code>的装饰器（或者说是注解）,下面是我的配置文件：<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;compilerOptions&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;lib&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="string">&quot;dom&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;es2015&quot;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;target&quot;</span><span class="punctuation">:</span> <span class="string">&quot;es5&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;module&quot;</span><span class="punctuation">:</span> <span class="string">&quot;commonjs&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;outDir&quot;</span><span class="punctuation">:</span> <span class="string">&quot;./dist&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;strict&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;esModuleInterop&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;experimentalDecorators&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;emitDecoratorMetadata&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></p><p>其中，<code>experimentalDecorators</code>表示<strong>为ES装饰器启用实验支持</strong>，<code>emitDecoratorMetadata</code>表示<strong>在源代码中为装饰声明产生类型的元数据</strong>，配置好了这两项之后，我们才能使用<code>Typescript</code>的装饰器，接下来我们需要安装依赖<code>reflect-metadata</code>，用于读取和设置元数据。</p><h4 id="Injectable的实现"><a href="#Injectable的实现" class="headerlink" title="@Injectable的实现"></a>@Injectable的实现</h4><p><code>@Injectable</code>是一个装饰器，它标识被装饰的类是一个<code>Provider</code>，它的声明方式如下<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">export function Injectable(): ClassDecorator &#123;</span><br><span class="line">  return (target) =&gt; &#123;</span><br><span class="line"></span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>我们在此装饰器中什么都不做，他只起到一个标识的作用。</p><h4 id="Module的实现"><a href="#Module的实现" class="headerlink" title="@Module的实现"></a>@Module的实现</h4><p><code>@Module</code>是一个装饰器，它标识被装饰的类是一个<code>Module</code>，它的声明方式如下<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">const DI_IMPORTS_SYMBOL = Symbol(&#x27;di:imports&#x27;)</span><br><span class="line">const DI_PROVIDERS_SYMBOL = Symbol(&#x27;di:providers&#x27;)</span><br><span class="line"></span><br><span class="line">export function Module(options: &#123; imports?: Array&lt;any&gt;, providers?: Array&lt;any&gt; &#125;): ClassDecorator &#123;</span><br><span class="line">  return (target) =&gt; &#123;</span><br><span class="line">    Reflect.defineMetadata(DI_IMPORTS_SYMBOL, new Set(options.imports || []), target);</span><br><span class="line">    Reflect.defineMetadata(DI_PROVIDERS_SYMBOL, new Set(options.providers || []), target);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>我们使用<code>Set</code>来存储一个<code>Module</code>作用域中它所声明的<code>Providers</code>和它所引入的其他模块。</p><h4 id="Factory的实现"><a href="#Factory的实现" class="headerlink" title="Factory的实现"></a>Factory的实现</h4><p>我们希望达到的目的是，在使用时可以通过<code>Factory.create(SomeModule)</code>来获取一个<code>Module</code>的实例，然后通过<code>Module</code>实例来获取一个<code>Provider</code>，例如<code>Factory.create(SomeModule).get(BService).doSomething()</code>，此时应该输出<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Factory.create(SomeModule).get(BService).doSomething();</span><br><span class="line">// this is AService::doSomething</span><br><span class="line">// this is BService::doSomething</span><br></pre></td></tr></table></figure></p><p>Talk is cheap. Show me the code:<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line">export namespace Factory &#123;</span><br><span class="line"></span><br><span class="line">  export function create(module: Type) &#123;</span><br><span class="line">    const imports: Set&lt;Type&gt; = Reflect.getMetadata(DI_IMPORTS_SYMBOL, module);</span><br><span class="line">    const providers: Set&lt;any&gt; = Reflect.getMetadata(DI_PROVIDERS_SYMBOL, module);</span><br><span class="line">    const providersMap = new Map();</span><br><span class="line"></span><br><span class="line">    const importModules = Array.from(imports).map((importModule) =&gt; &#123;</span><br><span class="line">      let moduleInstance: ModuleInstance = moduleInstances.get(importModule);</span><br><span class="line">      if(!moduleInstance) &#123;</span><br><span class="line">        moduleInstance = create(importModule);</span><br><span class="line">        moduleInstances.set(importModule, moduleInstance);</span><br><span class="line">      &#125;</span><br><span class="line">      return moduleInstance;</span><br><span class="line">    &#125;);</span><br><span class="line">    const moduleInstance = new ModuleInstance(importModules, providersMap);</span><br><span class="line"></span><br><span class="line">    providers.forEach(provider =&gt; &#123;</span><br><span class="line">      createProvider(provider, providers, moduleInstance);</span><br><span class="line">    &#125;);</span><br><span class="line">    return moduleInstance;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  function createProvider(provider: any, providers: Set&lt;any&gt;, moduleInstance: ModuleInstance) &#123;</span><br><span class="line">    let providerInstance = moduleInstance.providers.get(provider);</span><br><span class="line"></span><br><span class="line">    if(providerInstance) &#123;</span><br><span class="line">      return providerInstance;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    const deps: Array&lt;any&gt; = Reflect.getMetadata(&#x27;design:paramtypes&#x27;, provider);</span><br><span class="line">    if(!deps) &#123;</span><br><span class="line">      throw new Error(`No provider named $&#123; provider.name &#125;, do yout add @Injectable() to this provider?`);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    const args = deps.map(dep =&gt; &#123;</span><br><span class="line">      let depInstance = moduleInstance.providers.get(dep);</span><br><span class="line">      if(!depInstance) &#123;</span><br><span class="line">        if(providers.has(dep)) &#123;</span><br><span class="line">          depInstance = createProvider(dep, providers, moduleInstance);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">          moduleInstance.imports.some(imp =&gt; &#123;</span><br><span class="line">            depInstance = createProvider(dep, new Set(), imp);</span><br><span class="line">            return !!depInstance;</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      if(!depInstance) &#123;</span><br><span class="line">        throw new Error(`can not found provider $&#123; dep.name &#125;`);</span><br><span class="line">      &#125;</span><br><span class="line">      return depInstance;</span><br><span class="line">    &#125;);</span><br><span class="line">    providerInstance = new provider(...args);</span><br><span class="line">    moduleInstance.providers.set(provider, providerInstance);</span><br><span class="line">    return providerInstance;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  export class ModuleInstance &#123;</span><br><span class="line"></span><br><span class="line">    constructor(</span><br><span class="line">        public imports: Array&lt;ModuleInstance&gt;,</span><br><span class="line">        public providers: Map&lt;any, any&gt;) &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    get&lt;T&gt;(provider: Type&lt;T&gt;) &#123;</span><br><span class="line">      let instance: T = this.providers.get(provider);</span><br><span class="line">      if(!instance) &#123;</span><br><span class="line">        this.imports.some(imp =&gt; &#123;</span><br><span class="line">          instance = imp.get(provider);</span><br><span class="line">          return !!instance;</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">      if(!instance) &#123;</span><br><span class="line">        throw new Error(`No provider named: $&#123; provider.name &#125;`);</span><br><span class="line">      &#125;</span><br><span class="line">      return instance;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>以上就是整个依赖注入的实现了，感兴趣的朋友可以到我的Github上面查看源代码，核心文件就是<code>lib/di.ts</code>，地址是<a href="https://github.com/hungtcs/light-di/blob/master/lib/di.ts">https://github.com/hungtcs/light-di/blob/master/lib/di.ts</a></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;依赖注入是一个很重要的设计模式。 它使用得非常广泛，以至于几乎每个人都把它简称为 DI 。
Angular 有自己的依赖注入框架，离开它，你几乎没办法构建出 Angular 应用。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;下面介绍一种简单的（只有100行左右代码）实现类似Angular依赖注入的方式，先看一个例子&lt;/p&gt;
    
    </summary>
    
      <category term="前端开发" scheme="https://blog.hungtcs.top/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
      <category term="Angular" scheme="https://blog.hungtcs.top/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/Angular/"/>
    
    
      <category term="Angular" scheme="https://blog.hungtcs.top/tags/Angular/"/>
    
      <category term="DI" scheme="https://blog.hungtcs.top/tags/DI/"/>
    
      <category term="Typescript" scheme="https://blog.hungtcs.top/tags/Typescript/"/>
    
  </entry>
  
  <entry>
    <title>21. SD卡介绍</title>
    <link href="https://blog.hungtcs.top/2019/03/24/21-SD%E5%8D%A1%E4%BB%8B%E7%BB%8D/"/>
    <id>https://blog.hungtcs.top/2019/03/24/21-SD卡介绍/</id>
    <published>2019-03-24T04:59:37.000Z</published>
    <updated>2022-08-17T02:40:45.592Z</updated>
    
    <content type="html"><![CDATA[<h3 id="SD卡简介"><a href="#SD卡简介" class="headerlink" title="SD卡简介"></a>SD卡简介</h3><p>SD卡（Secure Digital Memory Card）的技术建是基于MultiMedia卡（MMC）格式上发展而来，大小和MMC差不多，SD卡与MMC卡保持着向上兼容，也就是说，MMC可以被新的SD设备存取，兼容性则取决于应用软件，但SD卡却不可以被MMC设备存取。（SD卡外型采用了与MMC厚度一样的导轨式设计，以使SD设备可以适合MMC)。</p><p>设有SD卡插槽的设备能够使用较簿身的MMC卡，但是标准的SD卡却不能插入到MMC卡插槽。SD卡能够于CF卡和PCMCIA卡上，插上转接器使用；而miniSD卡和microSD卡亦能插上转接器于SD卡插槽使用。</p><img src="/2019/03/24/21-SD%E5%8D%A1%E4%BB%8B%E7%BB%8D/sd-card-specs.png" class=""><img src="/2019/03/24/21-SD%E5%8D%A1%E4%BB%8B%E7%BB%8D/classes.png" class=""><span id="more"></span><h3 id="SD卡的引脚定义"><a href="#SD卡的引脚定义" class="headerlink" title="SD卡的引脚定义"></a>SD卡的引脚定义</h3><img src="/2019/03/24/21-SD%E5%8D%A1%E4%BB%8B%E7%BB%8D/sd-pins.png" class=""><h3 id="寄存器"><a href="#寄存器" class="headerlink" title="寄存器"></a>寄存器</h3><img src="/2019/03/24/21-SD%E5%8D%A1%E4%BB%8B%E7%BB%8D/regs.png" class=""><table><thead><tr><th style="text-align:left">名称</th><th style="text-align:left">宽度</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">CID</td><td style="text-align:left">128</td><td style="text-align:left">卡标识号</td></tr><tr><td style="text-align:left">RCA</td><td style="text-align:left">16</td><td style="text-align:left">相对卡地址（Relative Card Address）：本地系统中卡的地址，<br />动态变化，在主机初始化的时候确定。<br /><strong>SPI模式中没有</strong></td></tr><tr><td style="text-align:left">CSD</td><td style="text-align:left">128</td><td style="text-align:left">卡的描述数据：卡操作条件的相关的信息数据</td></tr><tr><td style="text-align:left">SCR</td><td style="text-align:left">64</td><td style="text-align:left">SD配置寄存器：SD卡特定的信息数据</td></tr><tr><td style="text-align:left">OCR</td><td style="text-align:left">32</td><td style="text-align:left">操作条件寄存器</td></tr></tbody></table><h3 id="CID-寄存器"><a href="#CID-寄存器" class="headerlink" title="CID 寄存器"></a>CID 寄存器</h3><p>CID寄存器长度为<code>16个字节</code>的卡唯一标识号，该号在生产厂家编程后无法更改。<em>SD和MMC卡的CID寄存器结构不一样。</em></p><table><thead><tr><th>名称</th><th>类型</th><th>宽度</th><th>CID位</th><th>内容</th><th>CID值（例）</th></tr></thead><tbody><tr><td>厂商ID</td><td>Binary</td><td>8</td><td>[127:120]</td><td>SD卡协会管理和分配</td><td>0x03</td></tr><tr><td>OEM/Application ID（OID）</td><td>ASCII</td><td>16</td><td>[119:104]</td><td>识别卡的OEM或卡内容，由制造商分配</td><td>0x53, 0x44</td></tr><tr><td>产品名（PNM）</td><td>ASCII</td><td>40</td><td>[103:64]</td><td>5个ASCII字符</td><td>SD128</td></tr><tr><td>产品版本（PRV）</td><td>BCD</td><td>8</td><td>[65:56]</td><td>2个2进制编码的十进制数</td><td>30</td></tr><tr><td>序列号（PSN）</td><td>Binary</td><td>32</td><td>[55:24]</td><td>32位无符号证书</td><td></td></tr><tr><td>保留</td><td></td><td>4</td><td>[23:20]</td><td></td><td></td></tr><tr><td>生产日期（MDT）</td><td>BCD</td><td>12</td><td>[19:8]</td><td>YYM（从2000年的偏移量）</td><td>0x014（Apr 2001）</td></tr><tr><td>CRC7校验和（CRC）</td><td>Binary</td><td>7</td><td>[7:1]</td><td></td><td></td></tr><tr><td>未用</td><td></td><td>1</td><td>[0:0]</td><td></td><td></td></tr></tbody></table><h3 id="SD-Bus-Mode"><a href="#SD-Bus-Mode" class="headerlink" title="SD Bus Mode"></a>SD Bus Mode</h3><img src="/2019/03/24/21-SD%E5%8D%A1%E4%BB%8B%E7%BB%8D/sd-bus-lines.png" class=""><table><thead><tr><th style="text-align:left">Pin#</th><th style="text-align:left">Nmae</th><th style="text-align:left">Type1</th><th style="text-align:left">SD Description</th></tr></thead><tbody><tr><td style="text-align:left">1</td><td style="text-align:left">CD/DAT3</td><td style="text-align:left">I/O</td><td style="text-align:left">Card Detect / Data Line [Bit 3]</td></tr><tr><td style="text-align:left">2</td><td style="text-align:left">CMD</td><td style="text-align:left">I/O</td><td style="text-align:left">Cmmand / Response</td></tr><tr><td style="text-align:left">3</td><td style="text-align:left">VSS1</td><td style="text-align:left">S</td><td style="text-align:left">Supply Voltage Ground</td></tr><tr><td style="text-align:left">4</td><td style="text-align:left">VDD</td><td style="text-align:left">S</td><td style="text-align:left">Supply Voltage</td></tr><tr><td style="text-align:left">5</td><td style="text-align:left">CLK</td><td style="text-align:left">I</td><td style="text-align:left">Clock</td></tr><tr><td style="text-align:left">6</td><td style="text-align:left">VSS2</td><td style="text-align:left">S</td><td style="text-align:left">Supply Voltage Ground</td></tr><tr><td style="text-align:left">7</td><td style="text-align:left">DAT0</td><td style="text-align:left">I/O</td><td style="text-align:left">Data Line [Bit 0]</td></tr><tr><td style="text-align:left">8</td><td style="text-align:left">DAT1</td><td style="text-align:left">I/O</td><td style="text-align:left">Data Line [Bit 1]</td></tr><tr><td style="text-align:left">9</td><td style="text-align:left">DAT2</td><td style="text-align:left">I/O</td><td style="text-align:left">Data Line [Bit 2]</td></tr></tbody></table><h3 id="SPI-Bus-Mode-引脚定义"><a href="#SPI-Bus-Mode-引脚定义" class="headerlink" title="SPI Bus Mode 引脚定义"></a>SPI Bus Mode 引脚定义</h3><img src="/2019/03/24/21-SD%E5%8D%A1%E4%BB%8B%E7%BB%8D/spi-lines.png" class="" title="要加上10～100K的上拉电阻"><table><thead><tr><th style="text-align:left">Pin#</th><th style="text-align:left">Nmae</th><th style="text-align:left">Type1</th><th style="text-align:left">SPI Description</th></tr></thead><tbody><tr><td style="text-align:left">1</td><td style="text-align:left">CS</td><td style="text-align:left">I</td><td style="text-align:left">Chip Select(Active Low)</td></tr><tr><td style="text-align:left">2</td><td style="text-align:left">MOSI</td><td style="text-align:left">I</td><td style="text-align:left">Host To Card</td></tr><tr><td style="text-align:left">3</td><td style="text-align:left">VSS1</td><td style="text-align:left">S</td><td style="text-align:left">Supply Voltage Ground</td></tr><tr><td style="text-align:left">4</td><td style="text-align:left">VDD</td><td style="text-align:left">S</td><td style="text-align:left">Supply Voltage</td></tr><tr><td style="text-align:left">5</td><td style="text-align:left">CLK</td><td style="text-align:left">I</td><td style="text-align:left">Clock</td></tr><tr><td style="text-align:left">6</td><td style="text-align:left">VSS2</td><td style="text-align:left">S</td><td style="text-align:left">Supply Voltage Ground</td></tr><tr><td style="text-align:left">7</td><td style="text-align:left">MISO</td><td style="text-align:left">O</td><td style="text-align:left">Card To Host</td></tr><tr><td style="text-align:left">8</td><td style="text-align:left">RSV</td><td style="text-align:left">I</td><td style="text-align:left">Reserved</td></tr><tr><td style="text-align:left">9</td><td style="text-align:left">RSV</td><td style="text-align:left">I</td><td style="text-align:left">Reserved</td></tr></tbody></table><h3 id="SPI通信协议与命令"><a href="#SPI通信协议与命令" class="headerlink" title="SPI通信协议与命令"></a>SPI通信协议与命令</h3><p>SD卡的指令由6个字节组成。字节1的最高两位固定为01, 低6位为命令号（例：CMD16为10000即0x10，完成的CMD16第一个字节为01010000）。字节2～5为命令参数。字节6的高7位为CRC值，最低位固定为1。</p><img src="/2019/03/24/21-SD%E5%8D%A1%E4%BB%8B%E7%BB%8D/command-frame.png" class="">]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;SD卡简介&quot;&gt;&lt;a href=&quot;#SD卡简介&quot; class=&quot;headerlink&quot; title=&quot;SD卡简介&quot;&gt;&lt;/a&gt;SD卡简介&lt;/h3&gt;&lt;p&gt;SD卡（Secure Digital Memory Card）的技术建是基于MultiMedia卡（MMC）格式上发展而来，大小和MMC差不多，SD卡与MMC卡保持着向上兼容，也就是说，MMC可以被新的SD设备存取，兼容性则取决于应用软件，但SD卡却不可以被MMC设备存取。（SD卡外型采用了与MMC厚度一样的导轨式设计，以使SD设备可以适合MMC)。&lt;/p&gt;
&lt;p&gt;设有SD卡插槽的设备能够使用较簿身的MMC卡，但是标准的SD卡却不能插入到MMC卡插槽。SD卡能够于CF卡和PCMCIA卡上，插上转接器使用；
而miniSD卡和microSD卡亦能插上转接器于SD卡插槽使用。&lt;/p&gt;
&lt;img src=&quot;/2019/03/24/21-SD%E5%8D%A1%E4%BB%8B%E7%BB%8D/sd-card-specs.png&quot; class=&quot;&quot;&gt;
&lt;img src=&quot;/2019/03/24/21-SD%E5%8D%A1%E4%BB%8B%E7%BB%8D/classes.png&quot; class=&quot;&quot;&gt;
    
    </summary>
    
      <category term="单片机" scheme="https://blog.hungtcs.top/categories/%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
      <category term="外设" scheme="https://blog.hungtcs.top/categories/%E5%8D%95%E7%89%87%E6%9C%BA/%E5%A4%96%E8%AE%BE/"/>
    
      <category term="SD" scheme="https://blog.hungtcs.top/categories/%E5%8D%95%E7%89%87%E6%9C%BA/%E5%A4%96%E8%AE%BE/SD/"/>
    
    
      <category term="SD" scheme="https://blog.hungtcs.top/tags/SD/"/>
    
      <category term="SD卡" scheme="https://blog.hungtcs.top/tags/SD%E5%8D%A1/"/>
    
      <category term="SPI" scheme="https://blog.hungtcs.top/tags/SPI/"/>
    
      <category term="SDIO" scheme="https://blog.hungtcs.top/tags/SDIO/"/>
    
  </entry>
  
  <entry>
    <title>20. Ubuntu/Debian 安装ST-link的过程和方法</title>
    <link href="https://blog.hungtcs.top/2018/07/23/20-Ubuntu-Debian-%E5%AE%89%E8%A3%85ST-link%E7%9A%84%E8%BF%87%E7%A8%8B%E5%92%8C%E6%96%B9%E6%B3%95/"/>
    <id>https://blog.hungtcs.top/2018/07/23/20-Ubuntu-Debian-安装ST-link的过程和方法/</id>
    <published>2018-07-23T01:45:41.000Z</published>
    <updated>2022-08-17T02:40:45.592Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install libusb-1.0-0-dev libusb-1.0-0 cmake build-essential</span><br></pre></td></tr></table></figure><span id="more"></span><h3 id="克隆stlink到本地目录"><a href="#克隆stlink到本地目录" class="headerlink" title="克隆stlink到本地目录"></a>克隆stlink到本地目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> --depth=1 https://github.com/texane/stlink.git</span><br><span class="line">正克隆到 <span class="string">&#x27;stlink&#x27;</span>...</span><br><span class="line">remote: Counting objects: 175, <span class="keyword">done</span>.</span><br><span class="line">remote: Compressing objects: 100% (141/141), <span class="keyword">done</span>.</span><br><span class="line">remote: Total 175 (delta 4), reused 101 (delta 2), pack-reused 0</span><br><span class="line">接收对象中: 100% (175/175), 198.33 KiB | 141.00 KiB/s, 完成.</span><br><span class="line">处理 delta 中: 100% (4/4), 完成.</span><br><span class="line">检查连接... 完成。</span><br><span class="line">$</span><br><span class="line">$ <span class="built_in">cd</span> stlink</span><br><span class="line">$ <span class="built_in">ls</span> -al</span><br><span class="line">总用量 116K</span><br><span class="line">drwxrwxr-x 15 hung hung 4.0K 7月  23 09:47 .</span><br><span class="line">drwxr-xr-x  9 hung hung 4.0K 7月  23 09:47 ..</span><br><span class="line">-rw-rw-r--  1 hung hung  593 7月  23 09:47 .appveyor.yml</span><br><span class="line">-rw-rw-r--  1 hung hung 7.2K 7月  23 09:47 ChangeLog.md</span><br><span class="line">drwxrwxr-x  3 hung hung 4.0K 7月  23 09:47 cmake</span><br><span class="line">-rw-rw-r--  1 hung hung 5.8K 7月  23 09:47 CMakeLists.txt</span><br><span class="line">drwxrwxr-x  3 hung hung 4.0K 7月  23 09:47 debian</span><br><span class="line">drwxrwxr-x  4 hung hung 4.0K 7月  23 09:47 doc</span><br><span class="line">drwxrwxr-x  4 hung hung 4.0K 7月  23 09:47 etc</span><br><span class="line">drwxrwxr-x  2 hung hung 4.0K 7月  23 09:47 flashloaders</span><br><span class="line">drwxrwxr-x  8 hung hung 4.0K 7月  23 09:48 .git</span><br><span class="line">drwxrwxr-x  2 hung hung 4.0K 7月  23 09:47 .github</span><br><span class="line">-rw-rw-r--  1 hung hung   20 7月  23 09:47 .gitignore</span><br><span class="line">drwxrwxr-x  3 hung hung 4.0K 7月  23 09:47 include</span><br><span class="line">-rw-rw-r--  1 hung hung 1.7K 7月  23 09:47 LICENSE</span><br><span class="line">-rw-rw-r--  1 hung hung 1.1K 7月  23 09:47 Makefile</span><br><span class="line">-rw-rw-r--  1 hung hung 8.8K 7月  23 09:47 README.md</span><br><span class="line">drwxrwxr-x  2 hung hung 4.0K 7月  23 09:47 scripts</span><br><span class="line">drwxrwxr-x  7 hung hung 4.0K 7月  23 09:47 src</span><br><span class="line">drwxrwxr-x  2 hung hung 4.0K 7月  23 09:47 stlinkv1_macosx_driver</span><br><span class="line">drwxrwxr-x  2 hung hung 4.0K 7月  23 09:47 tests</span><br><span class="line">-rwxrwxr-x  1 hung hung  656 7月  23 09:47 .travis.sh</span><br><span class="line">-rw-rw-r--  1 hung hung  348 7月  23 09:47 .travis.yml</span><br><span class="line">drwxrwxr-x  3 hung hung 4.0K 7月  23 09:47 usr</span><br><span class="line">-rw-rw-r--  1 hung hung    6 7月  23 09:47 .version</span><br></pre></td></tr></table></figure><h3 id="编译stlink"><a href="#编译stlink" class="headerlink" title="编译stlink"></a>编译stlink</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">$ make</span><br><span class="line">-- The C compiler identification is GNU 5.4.0</span><br><span class="line">-- Check <span class="keyword">for</span> working C compiler: /usr/bin/cc</span><br><span class="line">-- Check <span class="keyword">for</span> working C compiler: /usr/bin/cc -- works</span><br><span class="line">-- Detecting C compiler ABI info</span><br><span class="line">-- Detecting C compiler ABI info - <span class="keyword">done</span></span><br><span class="line">-- Detecting C compile features</span><br><span class="line">-- Detecting C compile features - <span class="keyword">done</span></span><br><span class="line">-- stlink version: 79306cc</span><br><span class="line">--           Major  Minor  Patch</span><br><span class="line">-- Performing Test C_SUPPORTS_STD_GNU99</span><br><span class="line">-- Performing Test C_SUPPORTS_STD_GNU99 - Success</span><br><span class="line">-- Performing Test C_SUPPORTS_WALL</span><br><span class="line">-- Performing Test C_SUPPORTS_WALL - Success</span><br><span class="line">-- Performing Test C_SUPPORTS_WEXTRA</span><br><span class="line">-- Performing Test C_SUPPORTS_WEXTRA - Success</span><br><span class="line">-- Performing Test C_SUPPORTS_WSHADOW</span><br><span class="line">-- Performing Test C_SUPPORTS_WSHADOW - Success</span><br><span class="line">-- Performing Test C_SUPPORTS_D_FORTIFY_SOURCE_2</span><br><span class="line">-- Performing Test C_SUPPORTS_D_FORTIFY_SOURCE_2 - Success</span><br><span class="line">-- Performing Test C_SUPPORTS_FSTRICT_ALIASING</span><br><span class="line">-- Performing Test C_SUPPORTS_FSTRICT_ALIASING - Success</span><br><span class="line">-- Performing Test C_SUPPORTS_WUNDEF</span><br><span class="line">-- Performing Test C_SUPPORTS_WUNDEF - Success</span><br><span class="line">-- Performing Test C_SUPPORTS_WFORMAT</span><br><span class="line">-- Performing Test C_SUPPORTS_WFORMAT - Success</span><br><span class="line">-- Performing Test C_SUPPORTS_WFORMAT_SECURITY</span><br><span class="line">-- Performing Test C_SUPPORTS_WFORMAT_SECURITY - Success</span><br><span class="line">-- Performing Test C_SUPPORTS_WMAYBE_UNINITIALIZED</span><br><span class="line">-- Performing Test C_SUPPORTS_WMAYBE_UNINITIALIZED - Success</span><br><span class="line">-- Performing Test C_SUPPORTS_WMISSING_VARIABLE_DECLARATIONS</span><br><span class="line">-- Performing Test C_SUPPORTS_WMISSING_VARIABLE_DECLARATIONS - Failed</span><br><span class="line">-- Performing Test C_SUPPORTS_WSHORTEN_64_TO_32</span><br><span class="line">-- Performing Test C_SUPPORTS_WSHORTEN_64_TO_32 - Failed</span><br><span class="line">-- Performing Test C_SUPPORTS_WIMPLICIT_FUNCTION_DECLARATION</span><br><span class="line">-- Performing Test C_SUPPORTS_WIMPLICIT_FUNCTION_DECLARATION - Success</span><br><span class="line">-- Performing Test C_SUPPORTS_WREDUNDANT_DECLS</span><br><span class="line">-- Performing Test C_SUPPORTS_WREDUNDANT_DECLS - Success</span><br><span class="line">-- Performing Test C_SUPPORTS_FPIC</span><br><span class="line">-- Performing Test C_SUPPORTS_FPIC - Success</span><br><span class="line">-- Performing Test C_SUPPORTS_O2</span><br><span class="line">-- Performing Test C_SUPPORTS_O2 - Success</span><br><span class="line">-- Performing Test C_SUPPORTS_WERROR</span><br><span class="line">-- Performing Test C_SUPPORTS_WERROR - Success</span><br><span class="line">-- Found Libusb: /usr/lib/x86_64-linux-gnu/libusb-1.0.so</span><br><span class="line">-- found USB</span><br><span class="line">-- Found PkgConfig: /usr/bin/pkg-config (found version <span class="string">&quot;0.29.1&quot;</span>)</span><br><span class="line">-- Checking <span class="keyword">for</span> module <span class="string">&#x27;gtk+-3.0&#x27;</span></span><br><span class="line">--   Found gtk+-3.0, version 3.18.9</span><br><span class="line">-- Looking <span class="keyword">for</span> sys/mman.h</span><br><span class="line">-- Looking <span class="keyword">for</span> sys/mman.h - found</span><br><span class="line">-- Looking <span class="keyword">for</span> unistd.h</span><br><span class="line">-- Looking <span class="keyword">for</span> unistd.h - found</span><br><span class="line">CMake Error at CMakeLists.txt:121 (set_target_properties):</span><br><span class="line">  set_target_properties called with incorrect number of arguments.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- Manpage generation disabled</span><br><span class="line">-- Debian-based Linux OS detected</span><br><span class="line">-- Configuring incomplete, errors occurred!</span><br><span class="line">See also <span class="string">&quot;/home/hung/Temp/stlink/build/Release/CMakeFiles/CMakeOutput.log&quot;</span>.</span><br><span class="line">See also <span class="string">&quot;/home/hung/Temp/stlink/build/Release/CMakeFiles/CMakeError.log&quot;</span>.</span><br><span class="line">Makefile:42: recipe <span class="keyword">for</span> target <span class="string">&#x27;build/Release&#x27;</span> failed</span><br><span class="line">make: *** [build/Release] Error 1</span><br></pre></td></tr></table></figure><p>上述错误的解决办法是删除<code>.git</code>目录<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">rm</span> -rf .git</span><br><span class="line">$ make clean</span><br><span class="line">$ make</span><br><span class="line">-- The C compiler identification is GNU 5.4.0</span><br><span class="line">-- Check <span class="keyword">for</span> working C compiler: /usr/bin/cc</span><br><span class="line">-- Check <span class="keyword">for</span> working C compiler: /usr/bin/cc -- works</span><br><span class="line">-- Detecting C compiler ABI info</span><br><span class="line">-- Detecting C compiler ABI info - <span class="keyword">done</span></span><br><span class="line">-- Detecting C compile features</span><br><span class="line">-- Detecting C compile features - <span class="keyword">done</span></span><br><span class="line">-- stlink version: 1.5.0</span><br><span class="line">--           Major 1 Minor 5 Patch 0</span><br><span class="line">-- Performing Test C_SUPPORTS_STD_GNU99</span><br><span class="line">-- Performing Test C_SUPPORTS_STD_GNU99 - Success</span><br><span class="line">-- Performing Test C_SUPPORTS_WALL</span><br><span class="line">-- Performing Test C_SUPPORTS_WALL - Success</span><br><span class="line">-- Performing Test C_SUPPORTS_WEXTRA</span><br><span class="line">-- Performing Test C_SUPPORTS_WEXTRA - Success</span><br><span class="line">-- Performing Test C_SUPPORTS_WSHADOW</span><br><span class="line">-- Performing Test C_SUPPORTS_WSHADOW - Success</span><br><span class="line">-- Performing Test C_SUPPORTS_D_FORTIFY_SOURCE_2</span><br><span class="line">-- Performing Test C_SUPPORTS_D_FORTIFY_SOURCE_2 - Success</span><br><span class="line">-- Performing Test C_SUPPORTS_FSTRICT_ALIASING</span><br><span class="line">-- Performing Test C_SUPPORTS_FSTRICT_ALIASING - Success</span><br><span class="line">-- Performing Test C_SUPPORTS_WUNDEF</span><br><span class="line">-- Performing Test C_SUPPORTS_WUNDEF - Success</span><br><span class="line">-- Performing Test C_SUPPORTS_WFORMAT</span><br><span class="line">-- Performing Test C_SUPPORTS_WFORMAT - Success</span><br><span class="line">-- Performing Test C_SUPPORTS_WFORMAT_SECURITY</span><br><span class="line">-- Performing Test C_SUPPORTS_WFORMAT_SECURITY - Success</span><br><span class="line">-- Performing Test C_SUPPORTS_WMAYBE_UNINITIALIZED</span><br><span class="line">-- Performing Test C_SUPPORTS_WMAYBE_UNINITIALIZED - Success</span><br><span class="line">-- Performing Test C_SUPPORTS_WMISSING_VARIABLE_DECLARATIONS</span><br><span class="line">-- Performing Test C_SUPPORTS_WMISSING_VARIABLE_DECLARATIONS - Failed</span><br><span class="line">-- Performing Test C_SUPPORTS_WSHORTEN_64_TO_32</span><br><span class="line">-- Performing Test C_SUPPORTS_WSHORTEN_64_TO_32 - Failed</span><br><span class="line">-- Performing Test C_SUPPORTS_WIMPLICIT_FUNCTION_DECLARATION</span><br><span class="line">-- Performing Test C_SUPPORTS_WIMPLICIT_FUNCTION_DECLARATION - Success</span><br><span class="line">-- Performing Test C_SUPPORTS_WREDUNDANT_DECLS</span><br><span class="line">-- Performing Test C_SUPPORTS_WREDUNDANT_DECLS - Success</span><br><span class="line">-- Performing Test C_SUPPORTS_FPIC</span><br><span class="line">-- Performing Test C_SUPPORTS_FPIC - Success</span><br><span class="line">-- Performing Test C_SUPPORTS_O2</span><br><span class="line">-- Performing Test C_SUPPORTS_O2 - Success</span><br><span class="line">-- Performing Test C_SUPPORTS_WERROR</span><br><span class="line">-- Performing Test C_SUPPORTS_WERROR - Success</span><br><span class="line">-- Found Libusb: /usr/lib/x86_64-linux-gnu/libusb-1.0.so</span><br><span class="line">-- found USB</span><br><span class="line">-- Found PkgConfig: /usr/bin/pkg-config (found version <span class="string">&quot;0.29.1&quot;</span>)</span><br><span class="line">-- Checking <span class="keyword">for</span> module <span class="string">&#x27;gtk+-3.0&#x27;</span></span><br><span class="line">--   Found gtk+-3.0, version 3.18.9</span><br><span class="line">-- Looking <span class="keyword">for</span> sys/mman.h</span><br><span class="line">-- Looking <span class="keyword">for</span> sys/mman.h - found</span><br><span class="line">-- Looking <span class="keyword">for</span> unistd.h</span><br><span class="line">-- Looking <span class="keyword">for</span> unistd.h - found</span><br><span class="line">-- Manpage generation disabled</span><br><span class="line">-- Debian-based Linux OS detected</span><br><span class="line">-- Configuring <span class="keyword">done</span></span><br><span class="line">-- Generating <span class="keyword">done</span></span><br><span class="line">-- Build files have been written to: /home/hung/Temp/stlink/build/Release</span><br><span class="line">[RELEASE]</span><br><span class="line">Scanning dependencies of target stlink-static</span><br><span class="line">[  2%] Building C object CMakeFiles/stlink-static.dir/src/chipid.c.o</span><br><span class="line">[  5%] Building C object CMakeFiles/stlink-static.dir/src/common.c.o</span><br><span class="line">[  8%] Building C object CMakeFiles/stlink-static.dir/src/usb.c.o</span><br><span class="line">[ 11%] Building C object CMakeFiles/stlink-static.dir/src/sg.c.o</span><br><span class="line">[ 14%] Building C object CMakeFiles/stlink-static.dir/src/logging.c.o</span><br><span class="line">[ 17%] Building C object CMakeFiles/stlink-static.dir/src/flash_loader.c.o</span><br><span class="line">[ 20%] Linking C static library libstlink.a</span><br><span class="line">[ 20%] Built target stlink-static</span><br><span class="line">Scanning dependencies of target stlink</span><br><span class="line">[ 23%] Building C object CMakeFiles/stlink.dir/src/chipid.c.o</span><br><span class="line">[ 26%] Building C object CMakeFiles/stlink.dir/src/common.c.o</span><br><span class="line">[ 29%] Building C object CMakeFiles/stlink.dir/src/usb.c.o</span><br><span class="line">[ 32%] Building C object CMakeFiles/stlink.dir/src/sg.c.o</span><br><span class="line">[ 35%] Building C object CMakeFiles/stlink.dir/src/logging.c.o</span><br><span class="line">[ 38%] Building C object CMakeFiles/stlink.dir/src/flash_loader.c.o</span><br><span class="line">[ 41%] Linking C shared library libstlink.so</span><br><span class="line">[ 41%] Built target stlink</span><br><span class="line">Scanning dependencies of target st-flash</span><br><span class="line">[ 44%] Building C object CMakeFiles/st-flash.dir/src/tools/flash.c.o</span><br><span class="line">[ 47%] Building C object CMakeFiles/st-flash.dir/src/tools/flash_opts.c.o</span><br><span class="line">[ 50%] Linking C executable st-flash</span><br><span class="line">[ 50%] Built target st-flash</span><br><span class="line">Scanning dependencies of target st-info</span><br><span class="line">[ 52%] Building C object CMakeFiles/st-info.dir/src/tools/info.c.o</span><br><span class="line">[ 55%] Linking C executable st-info</span><br><span class="line">[ 55%] Built target st-info</span><br><span class="line">Scanning dependencies of target st-util</span><br><span class="line">[ 58%] Building C object src/gdbserver/CMakeFiles/st-util.dir/gdb-remote.c.o</span><br><span class="line">[ 61%] Building C object src/gdbserver/CMakeFiles/st-util.dir/gdb-server.c.o</span><br><span class="line">[ 64%] Building C object src/gdbserver/CMakeFiles/st-util.dir/semihosting.c.o</span><br><span class="line">[ 67%] Linking C executable st-util</span><br><span class="line">[ 67%] Built target st-util</span><br><span class="line">Scanning dependencies of target stlink-gui-local</span><br><span class="line">[ 70%] Building C object src/tools/gui/CMakeFiles/stlink-gui-local.dir/stlink-gui.c.o</span><br><span class="line">[ 73%] Linking C executable stlink-gui-local</span><br><span class="line">[ 73%] Built target stlink-gui-local</span><br><span class="line">Scanning dependencies of target stlink-gui</span><br><span class="line">[ 76%] Building C object src/tools/gui/CMakeFiles/stlink-gui.dir/stlink-gui.c.o</span><br><span class="line">[ 79%] Linking C executable stlink-gui</span><br><span class="line">[ 79%] Built target stlink-gui</span><br><span class="line">Scanning dependencies of target sg</span><br><span class="line">[ 82%] Building C object tests/CMakeFiles/sg.dir/sg.c.o</span><br><span class="line">[ 85%] Linking C executable sg</span><br><span class="line">[ 85%] Built target sg</span><br><span class="line">Scanning dependencies of target usb</span><br><span class="line">[ 88%] Building C object tests/CMakeFiles/usb.dir/usb.c.o</span><br><span class="line">[ 91%] Linking C executable usb</span><br><span class="line">[ 91%] Built target usb</span><br><span class="line">Scanning dependencies of target flash</span><br><span class="line">[ 94%] Building C object tests/CMakeFiles/flash.dir/flash.c.o</span><br><span class="line">[ 97%] Building C object tests/CMakeFiles/flash.dir/__/src/tools/flash_opts.c.o</span><br><span class="line">[100%] Linking C executable flash</span><br><span class="line">[100%] Built target flash</span><br></pre></td></tr></table></figure></p><h3 id="安装stlink"><a href="#安装stlink" class="headerlink" title="安装stlink"></a>安装stlink</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> build/Release</span><br><span class="line">$ <span class="built_in">ls</span> -al</span><br><span class="line">总用量 352</span><br><span class="line">drwxrwxr-x 8 hung hung   4096 7月  23 09:52 .</span><br><span class="line">drwxrwxr-x 3 hung hung   4096 7月  23 09:51 ..</span><br><span class="line">-rw-rw-r-- 1 hung hung  19316 7月  23 09:51 CMakeCache.txt</span><br><span class="line">drwxrwxr-x 8 hung hung   4096 7月  23 09:52 CMakeFiles</span><br><span class="line">-rw-rw-r-- 1 hung hung   7490 7月  23 09:51 cmake_install.cmake</span><br><span class="line">-rw-r--r-- 1 hung hung   3447 7月  23 09:51 CPackConfig.cmake</span><br><span class="line">-rw-r--r-- 1 hung hung   3850 7月  23 09:51 CPackSourceConfig.cmake</span><br><span class="line">drwxrwxr-x 3 hung hung   4096 7月  23 09:51 doc</span><br><span class="line">drwxrwxr-x 4 hung hung   4096 7月  23 09:51 include</span><br><span class="line">-rw-rw-r-- 1 hung hung 132872 7月  23 09:52 libstlink.a</span><br><span class="line">lrwxrwxrwx 1 hung hung     14 7月  23 09:52 libstlink.so -&gt; libstlink.so.1</span><br><span class="line">lrwxrwxrwx 1 hung hung     18 7月  23 09:52 libstlink.so.1 -&gt; libstlink.so.1.5.0</span><br><span class="line">-rwxrwxr-x 1 hung hung  96312 7月  23 09:52 libstlink.so.1.5.0</span><br><span class="line">-rw-rw-r-- 1 hung hung  18977 7月  23 09:51 Makefile</span><br><span class="line">drwxrwxr-x 4 hung hung   4096 7月  23 09:51 src</span><br><span class="line">-rwxrwxr-x 1 hung hung  18528 7月  23 09:52 st-flash</span><br><span class="line">-rwxrwxr-x 1 hung hung  13480 7月  23 09:52 st-info</span><br><span class="line">drwxrwxr-x 3 hung hung   4096 7月  23 09:52 tests</span><br><span class="line">drwxrwxr-x 3 hung hung   4096 7月  23 09:51 usr</span><br><span class="line">$ make</span><br><span class="line">[ 20%] Built target stlink-static</span><br><span class="line">[ 41%] Built target stlink</span><br><span class="line">[ 50%] Built target st-flash</span><br><span class="line">[ 55%] Built target st-info</span><br><span class="line">[ 67%] Built target st-util</span><br><span class="line">[ 73%] Built target stlink-gui-local</span><br><span class="line">[ 79%] Built target stlink-gui</span><br><span class="line">[ 85%] Built target sg</span><br><span class="line">[ 91%] Built target usb</span><br><span class="line">[100%] Built target flash</span><br><span class="line">$ sudo make install</span><br><span class="line">[sudo] hung 的密码：</span><br><span class="line">[ 20%] Built target stlink-static</span><br><span class="line">[ 41%] Built target stlink</span><br><span class="line">[ 50%] Built target st-flash</span><br><span class="line">[ 55%] Built target st-info</span><br><span class="line">[ 67%] Built target st-util</span><br><span class="line">[ 73%] Built target stlink-gui-local</span><br><span class="line">[ 79%] Built target stlink-gui</span><br><span class="line">[ 85%] Built target sg</span><br><span class="line">[ 91%] Built target usb</span><br><span class="line">[100%] Built target flash</span><br><span class="line">Install the project...</span><br><span class="line">-- Install configuration: <span class="string">&quot;Release&quot;</span></span><br><span class="line">-- Installing: /usr/local/lib/libstlink.so.1.5.0</span><br><span class="line">-- Up-to-date: /usr/local/lib/libstlink.so.1</span><br><span class="line">-- Up-to-date: /usr/local/lib/libstlink.so</span><br><span class="line">-- Installing: /usr/local/lib/libstlink.a</span><br><span class="line">-- Installing: /usr/local/bin/st-flash</span><br><span class="line">-- Set runtime path of <span class="string">&quot;/usr/local/bin/st-flash&quot;</span> to <span class="string">&quot;&quot;</span></span><br><span class="line">-- Installing: /usr/local/bin/st-info</span><br><span class="line">-- Set runtime path of <span class="string">&quot;/usr/local/bin/st-info&quot;</span> to <span class="string">&quot;&quot;</span></span><br><span class="line">-- Installing: /etc/modprobe.d/stlink_v1.conf</span><br><span class="line">-- Installing: /etc/udev/rules.d/49-stlinkv1.rules</span><br><span class="line">-- Installing: /etc/udev/rules.d/49-stlinkv2-1.rules</span><br><span class="line">-- Installing: /etc/udev/rules.d/49-stlinkv2.rules</span><br><span class="line">-- Installing: /usr/local/bin/st-util</span><br><span class="line">-- Set runtime path of <span class="string">&quot;/usr/local/bin/st-util&quot;</span> to <span class="string">&quot;&quot;</span></span><br><span class="line">-- Installing: /usr/local/bin/stlink-gui</span><br><span class="line">-- Installing: /usr/local/share/stlink/stlink-gui.ui</span><br><span class="line">-- Installing: /usr/local/share/applications/stlink-gui.desktop</span><br><span class="line">-- Installing: /usr/local/share/icons/hicolor/scalable/apps/stlink-gui.svg</span><br><span class="line">-- Installing: /usr/local/lib/pkgconfig/stlink.pc</span><br><span class="line">-- Installing: /usr/local/include/stlink.h</span><br><span class="line">-- Installing: /usr/local/include/stlink/commands.h</span><br><span class="line">-- Installing: /usr/local/include/stlink/flash_loader.h</span><br><span class="line">-- Installing: /usr/local/include/stlink/mmap.h</span><br><span class="line">-- Installing: /usr/local/include/stlink/sg.h</span><br><span class="line">-- Installing: /usr/local/include/stlink/usb.h</span><br><span class="line">-- Installing: /usr/local/include/stlink/backend.h</span><br><span class="line">-- Installing: /usr/local/include/stlink/reg.h</span><br><span class="line">-- Installing: /usr/local/include/stlink/chipid.h</span><br><span class="line">-- Installing: /usr/local/include/stlink/logging.h</span><br><span class="line">-- Installing: /usr/local/include/stlink/version.h</span><br><span class="line">-- Installing: /usr/local/share/man/man1/st-util.1</span><br><span class="line">-- Installing: /usr/local/share/man/man1/st-flash.1</span><br><span class="line">-- Installing: /usr/local/share/man/man1/st-info.1</span><br><span class="line">$ <span class="built_in">which</span> st-flash</span><br><span class="line">/usr/local/bin/st-flash</span><br><span class="line">$ st-flash --version</span><br><span class="line">st-flash: error <span class="keyword">while</span> loading shared libraries: libstlink.so.1: cannot open shared object file: No such file or directory</span><br><span class="line">$ ldd /usr/local/bin/st-flash</span><br><span class="line">    linux-vdso.so.1 =&gt;  (0x00007fffc0ad0000)</span><br><span class="line">    libstlink.so.1 =&gt; not found</span><br><span class="line">    libc.so.6 =&gt; /lib/x86_64-linux-gnu/libc.so.6 (0x00007f68856c0000)</span><br><span class="line">    libusb-1.0.so.0 =&gt; /lib/x86_64-linux-gnu/libusb-1.0.so.0 (0x00007f68854a8000)</span><br><span class="line">    /lib64/ld-linux-x86-64.so.2 (0x00007f6885c9f000)</span><br><span class="line">    libudev.so.1 =&gt; /lib/x86_64-linux-gnu/libudev.so.1 (0x00007f6885e7a000)</span><br><span class="line">    libpthread.so.0 =&gt; /lib/x86_64-linux-gnu/libpthread.so.0 (0x00007f688528b000)</span><br><span class="line">    librt.so.1 =&gt; /lib/x86_64-linux-gnu/librt.so.1 (0x00007f6885083000)</span><br></pre></td></tr></table></figure><p>如果遇到上述错误，可以执行<code>sudo ldconfig</code>解决<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ ldd /usr/local/bin/st-flash</span><br><span class="line">    linux-vdso.so.1 =&gt;  (0x00007ffdb1bdb000)</span><br><span class="line">    libstlink.so.1 =&gt; /usr/local/lib/libstlink.so.1 (0x00007f4580cf6000)</span><br><span class="line">    libc.so.6 =&gt; /lib/x86_64-linux-gnu/libc.so.6 (0x00007f458092c000)</span><br><span class="line">    libusb-1.0.so.0 =&gt; /lib/x86_64-linux-gnu/libusb-1.0.so.0 (0x00007f4580714000)</span><br><span class="line">    /lib64/ld-linux-x86-64.so.2 (0x00007f4580f0b000)</span><br><span class="line">    libudev.so.1 =&gt; /lib/x86_64-linux-gnu/libudev.so.1 (0x00007f45810e6000)</span><br><span class="line">    libpthread.so.0 =&gt; /lib/x86_64-linux-gnu/libpthread.so.0 (0x00007f45804f7000)</span><br><span class="line">    librt.so.1 =&gt; /lib/x86_64-linux-gnu/librt.so.1 (0x00007f45802ef000)</span><br><span class="line">$ st-flash --version</span><br><span class="line">v1.5.0</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;安装依赖&quot;&gt;&lt;a href=&quot;#安装依赖&quot; class=&quot;headerlink&quot; title=&quot;安装依赖&quot;&gt;&lt;/a&gt;安装依赖&lt;/h3&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt install libusb-1.0-0-dev libusb-1.0-0 cmake build-essential&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://blog.hungtcs.top/categories/Linux/"/>
    
      <category term="Debian" scheme="https://blog.hungtcs.top/categories/Linux/Debian/"/>
    
    
      <category term="STM32" scheme="https://blog.hungtcs.top/tags/STM32/"/>
    
      <category term="ST-link" scheme="https://blog.hungtcs.top/tags/ST-link/"/>
    
      <category term="Ubuntu" scheme="https://blog.hungtcs.top/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>19. digispark由于权限导致错误Assertion res &gt;= 4 failed的解决方法</title>
    <link href="https://blog.hungtcs.top/2018/07/12/19-digispark%E7%94%B1%E4%BA%8E%E6%9D%83%E9%99%90%E5%AF%BC%E8%87%B4%E9%94%99%E8%AF%AFAssertion-res-4-failed%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    <id>https://blog.hungtcs.top/2018/07/12/19-digispark由于权限导致错误Assertion-res-4-failed的解决方法/</id>
    <published>2018-07-12T04:58:31.000Z</published>
    <updated>2022-08-17T02:40:45.591Z</updated>
    
    <content type="html"><![CDATA[<h3 id="错误提示"><a href="#错误提示" class="headerlink" title="错误提示"></a>错误提示</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">micronucleus: library/micronucleus_lib.c:66: micronucleus_connect: Assertion `res &gt;= 4&#x27; failed.</span><br></pre></td></tr></table></figure><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p>创建文件<code>/etc/udev/rules.d/digispark.rules</code>，并写入以下内容<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SUBSYSTEM==&quot;usb&quot;, ATTR&#123;idVendor&#125;==&quot;16d0&quot;, ATTR&#123;idProduct&#125;==&quot;0753&quot;, MODE=&quot;0660&quot;, GROUP=&quot;dialout&quot;</span><br></pre></td></tr></table></figure>确保用户在<code>dialout</code>组，否则执行<code>sudo usermod -aG dialout &#123; username &#125;</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;错误提示&quot;&gt;&lt;a href=&quot;#错误提示&quot; class=&quot;headerlink&quot; title=&quot;错误提示&quot;&gt;&lt;/a&gt;错误提示&lt;/h3&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;
      
    
    </summary>
    
      <category term="单片机" scheme="https://blog.hungtcs.top/categories/%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
      <category term="Arduino" scheme="https://blog.hungtcs.top/categories/%E5%8D%95%E7%89%87%E6%9C%BA/Arduino/"/>
    
      <category term="Digispark" scheme="https://blog.hungtcs.top/categories/%E5%8D%95%E7%89%87%E6%9C%BA/Arduino/Digispark/"/>
    
    
      <category term="Arduino" scheme="https://blog.hungtcs.top/tags/Arduino/"/>
    
      <category term="Digispark" scheme="https://blog.hungtcs.top/tags/Digispark/"/>
    
      <category term="USB" scheme="https://blog.hungtcs.top/tags/USB/"/>
    
  </entry>
  
  <entry>
    <title>18. FreeBSD配置网络的方法</title>
    <link href="https://blog.hungtcs.top/2018/06/04/18-FreeBSD%E9%85%8D%E7%BD%AE%E7%BD%91%E7%BB%9C%E7%9A%84%E6%96%B9%E6%B3%95/"/>
    <id>https://blog.hungtcs.top/2018/06/04/18-FreeBSD配置网络的方法/</id>
    <published>2018-06-04T07:22:50.000Z</published>
    <updated>2022-08-17T02:40:45.591Z</updated>
    
    <content type="html"><![CDATA[<h3 id="配置IP"><a href="#配置IP" class="headerlink" title="配置IP"></a>配置IP</h3><ol><li>编辑<code>/etc/rc.conf</code>文件<figure class="highlight sh"><figcaption><span>/etc/rc.conf</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">hostname=<span class="string">&quot;freebsd&quot;</span></span><br><span class="line">ifconfig_em0=<span class="string">&quot;inet 192.168.1.201 netmask 255.255.255.0&quot;</span></span><br><span class="line">defaultrouter=<span class="string">&quot;192.168.1.1&quot;</span></span><br><span class="line">sshd_enable=<span class="string">&quot;YES&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set dumpdev to &quot;AUTO&quot; to enable crach dumps, &quot;NO&quot; to disbale</span></span><br><span class="line">dumpdev=<span class="string">&quot;AUTO&quot;</span></span><br></pre></td></tr></table></figure></li><li>执行<code>reboot</code>重启或者执行<code>sh /etc/rc.conf</code>生效</li></ol><h3 id="配置DNS服务器"><a href="#配置DNS服务器" class="headerlink" title="配置DNS服务器"></a>配置DNS服务器</h3><ol><li>编辑<code>/etc/resolv.conf</code></li><li>填写或更改一下内容<figure class="highlight sh"><figcaption><span>/etc/resolv.conf</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nameserver 192.168.1.1</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      简述配置freebsd网络的方法
    
    </summary>
    
      <category term="BSD" scheme="https://blog.hungtcs.top/categories/BSD/"/>
    
      <category term="FreeBSD" scheme="https://blog.hungtcs.top/categories/BSD/FreeBSD/"/>
    
      <category term="笔记" scheme="https://blog.hungtcs.top/categories/BSD/FreeBSD/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="FreeBSD" scheme="https://blog.hungtcs.top/tags/FreeBSD/"/>
    
      <category term="网络配置" scheme="https://blog.hungtcs.top/tags/%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>17. 如何在Linux上使用STM8单片机</title>
    <link href="https://blog.hungtcs.top/2018/05/24/17-%E5%A6%82%E4%BD%95%E5%9C%A8Linux%E4%B8%8A%E4%BD%BF%E7%94%A8STM8%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    <id>https://blog.hungtcs.top/2018/05/24/17-如何在Linux上使用STM8单片机/</id>
    <published>2018-05-24T08:25:17.000Z</published>
    <updated>2022-08-17T02:40:45.588Z</updated>
    
    <content type="html"><![CDATA[<p>在上一篇文章中，我们看了一下廉价的STM8开发板和编程使用的ST-Link。现在是时候采取一些行动了！</p><h3 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h3><h4 id="实例程序和文档"><a href="#实例程序和文档" class="headerlink" title="实例程序和文档"></a>实例程序和文档</h4><p>先阅读一些资料是一个良好的开端。</p><p>ST提供大量关于<a href="http://www.st.com/en/microcontrollers/stm8s103f3.html">STM8S103F3</a>的免费资料，<a href="http://www.st.com/en/microcontrollers/stm8s103f3.html">该页面</a>还列出了微控制器的所有主要功能，如果你想看的话。</p><p>如果你按照我的步骤开始的话，我推荐你另外阅读一下<a href="http://sdcc.sourceforge.net/doc/sdccman.pdf">SDCC的用户手册</a>，以便了了解SDCC编译器的特殊语法。</p><span id="more"></span><h4 id="编程软件"><a href="#编程软件" class="headerlink" title="编程软件"></a>编程软件</h4><p><strong>本指南是为Arch Linux编写的，其他发行版的用户可能会发现某些指令不能运行，请根据需要调整</strong></p><p>在Linux上开发STM8单片机需要下面两个软件的配合：</p><ul><li><a href="https://github.com/vdudouyt/stm8flash">stm8flash</a> 一个用于链接ST-Link的软件适配器</li><li><a href="http://sdcc.sourceforge.net/">sdcc</a> 一个编译器</li></ul><p>ST还提供了一些其他为STM8编程的<a href="http://www.st.com/en/development-tools/stm8-software-development-tools.html">编译器或工具</a>，但是他们只可以运行在windows上，或许你可以通过wine软件来运行，但是这都不是一个好办法。</p><p><em>如果你还打算使用ST-Link对STM32进行开发，你应该还需要安装<a href="https://www.archlinux.org/packages/?q=stlink">community/stlink</a></em></p><p>您可能需要也可能不需要以下内容<code>/etc/udev/rules.d/49-stlinkv2.rules</code>，我忘记了这是从哪里复制回来的了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"># stm32 discovery boards, with onboard st/linkv2</span><br><span class="line"># ie, STM32L, STM32F4.</span><br><span class="line"># STM32VL has st/linkv1, which is quite different</span><br><span class="line"></span><br><span class="line">SUBSYSTEMS==&quot;usb&quot;, ATTRS&#123;idVendor&#125;==&quot;0483&quot;, ATTRS&#123;idProduct&#125;==&quot;3748&quot;, \</span><br><span class="line">    MODE:=&quot;0666&quot;, \</span><br><span class="line">    SYMLINK+=&quot;stlinkv2_%n&quot;</span><br><span class="line"></span><br><span class="line">SUBSYSTEMS==&quot;usb&quot;, ATTRS&#123;idVendor&#125;==&quot;0483&quot;, ATTRS&#123;idProduct&#125;==&quot;374b&quot;, \</span><br><span class="line">    KERNEL!=&quot;sd*&quot;, KERNEL!=&quot;sg*&quot;, KERNEL!=&quot;tty*&quot;, SUBSYSTEM!=&quot;bsg&quot;, \</span><br><span class="line">    MODE:=&quot;0666&quot;, \</span><br><span class="line">    SYMLINK+=&quot;stlinkv2_%n&quot;</span><br><span class="line"></span><br><span class="line">SUBSYSTEMS==&quot;usb&quot;, ATTRS&#123;idVendor&#125;==&quot;0483&quot;, ATTRS&#123;idProduct&#125;==&quot;374b&quot;, \</span><br><span class="line">    KERNEL==&quot;sd*&quot;, MODE:=&quot;0666&quot;, \</span><br><span class="line">    SYMLINK+=&quot;stlinkv2_disk&quot;</span><br><span class="line"></span><br><span class="line">SUBSYSTEMS==&quot;usb&quot;, ATTRS&#123;idVendor&#125;==&quot;0483&quot;, ATTRS&#123;idProduct&#125;==&quot;374b&quot;, \</span><br><span class="line">    KERNEL==&quot;sg*&quot;, MODE:=&quot;0666&quot;, \</span><br><span class="line">    SYMLINK+=&quot;stlinkv2_raw_scsi&quot;</span><br><span class="line"></span><br><span class="line">SUBSYSTEMS==&quot;usb&quot;, ATTRS&#123;idVendor&#125;==&quot;0483&quot;, ATTRS&#123;idProduct&#125;==&quot;374b&quot;, \</span><br><span class="line">    SUBSYSTEM==&quot;bsg&quot;, MODE:=&quot;0666&quot;, \</span><br><span class="line">    SYMLINK+=&quot;stlinkv2_block_scsi&quot;</span><br><span class="line"></span><br><span class="line">SUBSYSTEMS==&quot;usb&quot;, ATTRS&#123;idVendor&#125;==&quot;0483&quot;, ATTRS&#123;idProduct&#125;==&quot;374b&quot;, \</span><br><span class="line">    KERNEL==&quot;tty*&quot;, MODE:=&quot;0666&quot;, \</span><br><span class="line">    SYMLINK+=&quot;stlinkv2_console&quot;</span><br><span class="line"></span><br><span class="line"># If you share your linux system with other users, or just don&#x27;t like the</span><br><span class="line"># idea of write permission for everybody, you can replace MODE:=&quot;0666&quot; with</span><br><span class="line"># OWNER:=&quot;yourusername&quot; to create the device owned by you, or with</span><br><span class="line"># GROUP:=&quot;somegroupname&quot; and control access using standard unix groups.</span><br></pre></td></tr></table></figure><h4 id="库文件"><a href="#库文件" class="headerlink" title="库文件"></a>库文件</h4><p>SDCC支持STM8，但由于许可原因(booo, ST!)，标准外设库（SPL）是缺失的。</p><p>有人开发了一个使SPL与SDCC兼容的补丁，<a href="https://github.com/gicking/SPL_2.2.0_SDCC_patch">点击这里</a>(这个补丁已经过期了，<a href="https://github.com/gicking/STM8-SPL_SDCC_patch">点击这里查看另一个更新的</a>)，另外有一个AUR软件包试(<a href="https://aur.archlinux.org/packages/stm8-spl-sdcc/">aur/stm8-spl-sdcc</a>)图将其安装在SDCC库文件夹中,但是这些SPL的文件包具有登录和EULA点击保护(but alas the zip with the SPL files is login &amp; EULA-click protected)(booo again, ST!)。</p><p>构建这个软件包的任务非常艰巨！</p><h5 id="下载SPL"><a href="#下载SPL" class="headerlink" title="下载SPL"></a>下载SPL</h5><p>首先，你必须从ST的官网(the evil corporate’s claws)下载SPL包的zip文件。<a href="https://my.st.com/content/my_st_com/en/products/embedded-software/mcus-embedded-software/stm8-embedded-software/stsw-stm8069.html">点击这里</a></p><p>我为此做了一个图片向导：<img src="/2018/05/24/17-%E5%A6%82%E4%BD%95%E5%9C%A8Linux%E4%B8%8A%E4%BD%BF%E7%94%A8STM8%E5%8D%95%E7%89%87%E6%9C%BA/01.jpg" class=""><img src="/2018/05/24/17-%E5%A6%82%E4%BD%95%E5%9C%A8Linux%E4%B8%8A%E4%BD%BF%E7%94%A8STM8%E5%8D%95%E7%89%87%E6%9C%BA/02.jpg" class=""><img src="/2018/05/24/17-%E5%A6%82%E4%BD%95%E5%9C%A8Linux%E4%B8%8A%E4%BD%BF%E7%94%A8STM8%E5%8D%95%E7%89%87%E6%9C%BA/03.jpg" class=""><img src="/2018/05/24/17-%E5%A6%82%E4%BD%95%E5%9C%A8Linux%E4%B8%8A%E4%BD%BF%E7%94%A8STM8%E5%8D%95%E7%89%87%E6%9C%BA/04.jpg" class=""><img src="/2018/05/24/17-%E5%A6%82%E4%BD%95%E5%9C%A8Linux%E4%B8%8A%E4%BD%BF%E7%94%A8STM8%E5%8D%95%E7%89%87%E6%9C%BA/05.jpg" class=""><img src="/2018/05/24/17-%E5%A6%82%E4%BD%95%E5%9C%A8Linux%E4%B8%8A%E4%BD%BF%E7%94%A8STM8%E5%8D%95%E7%89%87%E6%9C%BA/06.jpg" class=""></p><h5 id="打补丁"><a href="#打补丁" class="headerlink" title="打补丁"></a>打补丁</h5><p>在你下载了SPL的压缩包之后，为了让他能在SDCC下使用，我们需要给它打补丁，因为它是为非自由编译器（如Cosmic）制作的。虽然通过电子邮件的请求可能可以免费获取Cosmic，但是它只能在windows上使用。</p><p>让我们开始打补丁吧：</p><ol><li>下载AUR软件包，可能使用<code>cower -d stm8-spl-sdcc</code></li><li>将来之不易的<code>en.stsw-stm8069.zip</code>放到PKGBUILD同级，然后重新命名为<code>stsw-stm8069.zip</code>，HASH应该匹配</li><li>先运行<code>mapekpg</code>，接下来再运行<code>sudo pacman -U &lt;the xz file&gt;</code></li></ol><p>非Arch用户可以手动应用这些修补程序</p><p>如果你不喜欢在系统目录中安装这样的东西，你可以简单地从<code>src/STM8S_StdPeriph_Lib</code>复制修补后的SPL，然后放到你认为合适的地方（或者直接将<code>libraries/STM8S_StdPeriph_Driver</code>放到你的项目中去）。</p><p>您还可以从<code>src/STM8S_StdPeriph_Lib/Project/STM8S_StdPeriph_Template/SDCC</code>中获取示例Makefile，虽然需要一些调整，但是还是有一些参考价值。</p><h3 id="开始你的第一个项目"><a href="#开始你的第一个项目" class="headerlink" title="开始你的第一个项目"></a>开始你的第一个项目</h3><p>在此之前，你应该已经准备好工作环境，并且有一个最小系统开发板。</p><p>你可以点击这个链接下载<a href="https://www.ondrovo.com/a/20170107-stm8-getting-started/stm8_blinky.zip">实例程序</a>，或者直接下载已经<a href="https://www.ondrovo.com/a/20170107-stm8-getting-started/stm8_blinky.hex">编译好的ihx文件</a>，前提是你有和我一样的开发板，否则你可能不能直接使用。</p><p>接下来调整<code>makefile</code>里面的SPL路径，然后运行<code>make</code>命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ make</span><br><span class="line">sdcc -mstm8 -lstm8 --opt-code-size -DSTM8S103 -I./src -I/usr/share/sdcc/include/stm8/  -DSKIP_TRAPS=0 -c ./src/stm8s_it.c -o STM8S103/stm8s_it.rel</span><br><span class="line">sdcc -mstm8 -lstm8 --opt-code-size -DSTM8S103 -I./src -I/usr/share/sdcc/include/stm8/  -DSKIP_TRAPS=0 -c ./src/main.c -o STM8S103/main.rel</span><br><span class="line">sdcc -mstm8 -lstm8 --opt-code-size -DSTM8S103 -I./src -I/usr/share/sdcc/include/stm8/  -DSKIP_TRAPS=0 -c /usr/share/sdcc/lib/src/stm8/stm8s_gpio.c -o STM8S103/stm8s_gpio.rel</span><br><span class="line">sdcc -mstm8 -lstm8 --opt-code-size -o ./STM8S103/STM8S103.hex STM8S103/stm8s_it.rel STM8S103/main.rel STM8S103/stm8s_gpio.rel</span><br></pre></td></tr></table></figure><p>之所以makefile里面定一个多个步骤，是因为sdcc无法同时编译多文件。首先我们需要将每个<code>.c</code>文件编译到<code>.rel</code>文件(类似于<code>.o</code>文件，不过这是sdcc的版本),然后我们再通过这些<code>.rel</code>文件生成二进制文件。</p><h4 id="组织化你的代码"><a href="#组织化你的代码" class="headerlink" title="组织化你的代码"></a>组织化你的代码</h4><p>目前我们的源文件看起来很混乱，大部分原因是因为过多的注释，但是幸好<code>main.c</code>文件里面还算清晰，我们的项目基于ST提供的原始项目模板，这也是大部分注释的来源。同样的，STM32也有类似的问题，你可以随意清理。</p><p>你也可以将SPL的库文件直接复制到你的项目中，然后进行整理–删除里面的废话。(you should be able to simply #define it as no-op in stm8s.h,then you save some FLASH bytes by removing the error messages)</p><p>现在你可以直接阅读SPL的源代码了，以便从中获取更多你感兴趣的内容。这些文件通过外设的类型分组，像SPI、IIC、UART等等。</p><p>此外，SPL的库文件夹中还有一个大小为6M的chm说明文档，如果你找到办法打开它，它会很有用的。</p><p><strong>如果你选择使用SDCC，你可能会因为它缺少<code>-Wl,--gc-sections</code>等功能而不愉快。它总是将整个库文件与代码捆绑在一起，尽管某些函数显然未被使用。作为一个解决小文件大小的方法，我把几乎所有的SPL转换成内联函数，转换过后的代码可以在这里<a href="https://github.com/MightyPork/stm8s_inline_spl">下载</a>，不过我只做了简单的测试。</strong></p><h3 id="烧写程序"><a href="#烧写程序" class="headerlink" title="烧写程序"></a>烧写程序</h3><p>每个最小系统板在出场之前，都会预先安装一个blink闪烁程序，所以你可以直接插上电源就可以看到它开始工作。</p><p>现在你可以链接你的ST-Link开始烧写程序了，<strong>不要在使用USB供电的时候同时接通ST-LINK的3.3v到开发板，这有可能会烧坏你的烧写器</strong></p><p>烧写的第一步是关闭写保护，因为出厂加载的固件是读保护的，在锁定时你无法做任何事情。要解锁芯片，请执行下面的命令(运行<code>stm8flash -h</code>查看帮助)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">stm8flash -c stlinkv2 -p stm8s103f3 -u</span><br><span class="line">Determine OPT area</span><br><span class="line">Unlocked device. Option bytes reset to default state.</span><br><span class="line">Bytes written: 11</span><br></pre></td></tr></table></figure><p>板子此时应该会停止闪烁，不好，你现在把它变成砖了，不过不用担心，我们马上为它烧写新的程序。</p><p>接下来执行<code>make flash</code>命令开始烧写你的程序</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ stm8flash -c stlinkv2 -p stm8s103f3 -s flash -w stm8_blinky.hex</span><br><span class="line">Determine FLASH area</span><br><span class="line">Writing Intel hex file 655 bytes at 0x8000... OK</span><br><span class="line">Bytes written: 655</span><br></pre></td></tr></table></figure><p>此时开发板会立即开始闪烁，你可以通过更改演示观察执行效果，OK，It’s your time now!</p><h3 id="最后的想法"><a href="#最后的想法" class="headerlink" title="最后的想法"></a>最后的想法</h3><p>真心希望这两篇关于STM8的介绍可以帮助到你！你现在已经学会的搭建环境和烧写程序，现在尽情发挥你的创意吧！</p><p>我打算花一些时间玩STM8单片机，后续可能还会发表一些自己的想法， Until then, happy hacking!</p><h3 id="声明"><a href="#声明" class="headerlink" title="声明"></a>声明</h3><p>这篇文章是译文，原文地址<a href="https://www.ondrovo.com/a/20170107-stm8-getting-started/">点击这里</a>，原作者是<code>Ondřej Hruška</code>。此译文已获取原作者邮件授权，请仅用于学习用途，不允许转载，谢谢合作！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在上一篇文章中，我们看了一下廉价的STM8开发板和编程使用的ST-Link。现在是时候采取一些行动了！&lt;/p&gt;
&lt;h3 id=&quot;环境配置&quot;&gt;&lt;a href=&quot;#环境配置&quot; class=&quot;headerlink&quot; title=&quot;环境配置&quot;&gt;&lt;/a&gt;环境配置&lt;/h3&gt;&lt;h4 id=&quot;实例程序和文档&quot;&gt;&lt;a href=&quot;#实例程序和文档&quot; class=&quot;headerlink&quot; title=&quot;实例程序和文档&quot;&gt;&lt;/a&gt;实例程序和文档&lt;/h4&gt;&lt;p&gt;先阅读一些资料是一个良好的开端。&lt;/p&gt;
&lt;p&gt;ST提供大量关于&lt;a href=&quot;http://www.st.com/en/microcontrollers/stm8s103f3.html&quot;&gt;STM8S103F3&lt;/a&gt;的免费资料，&lt;a href=&quot;http://www.st.com/en/microcontrollers/stm8s103f3.html&quot;&gt;该页面&lt;/a&gt;还列出了微控制器的所有主要功能，如果你想看的话。&lt;/p&gt;
&lt;p&gt;如果你按照我的步骤开始的话，我推荐你另外阅读一下&lt;a href=&quot;http://sdcc.sourceforge.net/doc/sdccman.pdf&quot;&gt;SDCC的用户手册&lt;/a&gt;，以便了了解SDCC编译器的特殊语法。&lt;/p&gt;
    
    </summary>
    
      <category term="单片机" scheme="https://blog.hungtcs.top/categories/%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
      <category term="stm8" scheme="https://blog.hungtcs.top/categories/%E5%8D%95%E7%89%87%E6%9C%BA/stm8/"/>
    
    
      <category term="stm8" scheme="https://blog.hungtcs.top/tags/stm8/"/>
    
  </entry>
  
  <entry>
    <title>16. STM8单片机介绍</title>
    <link href="https://blog.hungtcs.top/2018/05/23/16-STM8%E5%8D%95%E7%89%87%E6%9C%BA%E4%BB%8B%E7%BB%8D/"/>
    <id>https://blog.hungtcs.top/2018/05/23/16-STM8单片机介绍/</id>
    <published>2018-05-23T14:18:58.000Z</published>
    <updated>2022-08-17T02:40:45.586Z</updated>
    
    <content type="html"><![CDATA[<h3 id="什么是STM8微控制器"><a href="#什么是STM8微控制器" class="headerlink" title="什么是STM8微控制器"></a>什么是STM8微控制器</h3><p>STM8是一款<a href="http://www.st.com">意法半导体</a>制造的高性价比、低功耗的8位微控制器。在简单的应用中，可以取代Arduino或者ATMEGA。</p><p>8位微控制器已经存在很长一段时间了，随着更加强大的芯片普及，8位微控制器渐渐不再成为大家的焦点，但是，8位的微控制器一直没有完全离开我们的视野。</p><span id="more"></span><p>像臭名昭著的8051,到目前为止它仍然非常活跃，部分原因可能是因为它的版权已经过期，现在任何人都可以免费使用它或者是融入到自己的产品中去（像国内的STC）。</p><p>多年以来出现过很多类型的其他8位微控制器家族，但是8位微控制器真正的繁荣是伴随着Arduino的推出和整个黑客DIY热潮。毫无疑问你一定熟知Atmel的AVR系列或者Microchip的PIC系列，由Arduino项目推广的AVR系列或者PIC已经逐渐占据了业余爱好者的市场，并且已经形成了成熟的商业产品，你可以在购物网站（原文eBay）上搜索<code>Arduino模块</code>试试看！</p><p>随着这种现象，毫无疑问其他芯片制造商自然想分一倍羹，<a href="http://www.st.com">意法半导体</a>的STM8系列就是其中的一员。你可能已经知道该公司是一家通用半导体制造商，并且它们之前推出过非常流行的STM32系列。虽然STM8还没有成为主流，但是不论如何，它非常便宜并且使用广泛。还有一些STM8的变体用于汽车电子，但是这是不我们接下来关注的系列。</p><h3 id="STM8-vs-ATMEGA328P"><a href="#STM8-vs-ATMEGA328P" class="headerlink" title="STM8 vs ATMEGA328P"></a>STM8 vs ATMEGA328P</h3><ul><li><p>功能比较<br />Arduino系列主要基于AVR，像ATMEGA328P，它运行在16MHz的晶震上，具有32kB的FLASH、2kB的RAM和一些必要的外设接口像定时器、串口、SPI、IIC等等。<br />STM8我们以STM8S103F3为例，它具有ATMEGA328P类似的外设，但是内存空间要小得多（8kB FLASH, 1kB RAM）。虽然它无法完全取代ATMEGA，但是在很多时候，因为它成本低所以使很多高性价比的产品成为现实，60美分做一个<code>SPI to Neopixel</code>，没问题！</p></li><li><p>架构差异<br />ATMEGA的架构中有一个令人不快的缺陷： <code>the Harvard memory design（哈佛内存设计）</code>。FLASH和RAM以重叠的方式共享相同的地址空间，这也许是为了节省地址位(address bit)，导致了相同的地址可能是FLASH或者RAM二者之一。这就是导致烦人的<code>pgm_read_byte()</code>原因——它需要一个特殊的汇编指令<code>LPM</code>从FLASH读取数据，甚至连<code>avr-gcc</code>的高层抽象都没有解决这个问题，并且在使用EEPROM的时候也会面临同样的问题。不过这并不致命，因为我们不会经常这样做。<br />可能受STM32启发的，STM8显示为冯诺依曼。因为两个存储器映射到了一个线性地址空间，没有重叠。内部有两条总线，但它的处理是透明的。 因此，您可以无缝地将常量存储在程序存储器中，甚至可以从RAM运行代码。这个优势可能不是game changer(规则改变者)，但它对调试有帮助（如果您使用专有的Windows IDE）。</p></li></ul><h3 id="最小系统板"><a href="#最小系统板" class="headerlink" title="最小系统板"></a>最小系统板</h3><p>下面是我使用的开发板的功能图，它搭载STM8S103F3P6芯片<img src="/2018/05/23/16-STM8%E5%8D%95%E7%89%87%E6%9C%BA%E4%BB%8B%E7%BB%8D/pic.jpg" class="">它的体积非常小，类似Arduino Pro Mini。注意不要被上面的USB接口欺骗了，它并没有USB接口，也没有板载下载器，只能用来供电。虽然有虚拟USB的可能性，但该板没有必要的12MHz晶振，并且DP/DM引脚(USB的引脚)也很难接入。不过并不是说这个想法不值得一试！</p><p>这是板子的顶部和底部的实际照片<img src="/2018/05/23/16-STM8%E5%8D%95%E7%89%87%E6%9C%BA%E4%BB%8B%E7%BB%8D/front-back.jpg" class=""></p><h3 id="关于供电"><a href="#关于供电" class="headerlink" title="关于供电"></a>关于供电</h3><p>从板子的背面我们可以看到板载的3.3v降压芯片，我们可以通过<code>5V</code>那个引脚供电，也可以通过USB接口供电，可惜的是USB的数据线被悬空了。</p><p>5V输出脚和3.3V输出脚都可以用作外设供电，但是需要注意的是，5V引脚直接与电源相连，并没有5V稳压，如果你使用USB供电，可以得到一个近似5V的电压，否则需要自己链接5V稳压。</p><p><strong>如果您打算从3.3V输出引脚驱动比较耗电的东西，请记住稳压器上没有散热器，所以如果使用较高的输入电压或过高的电流，它很容易变热。对于Neopixels等比较耗电的设备，我建议您直接将它们连接到5V引脚（如果您使用USB供电板）。</strong></p><p>还有一种供电的方法，就是通过编程器(STLink)供电，但是请非常注意，不要在使用比较耗电的外设的情况下使用编程器供电，<strong>STLink里面只有一个非常小的电流调节器</strong>，非常易损坏。</p><h3 id="板载LED"><a href="#板载LED" class="headerlink" title="板载LED"></a>板载LED</h3><p>最小系统板上有两个LED，一个是电源指示灯，另一个链接到B5。新买的板子会内置一个blink测试程序，我们可以使用USB供电查看新买的板子是否正常工作。</p><h3 id="编程设备"><a href="#编程设备" class="headerlink" title="编程设备"></a>编程设备</h3><p>要给STM8单片机烧写程序，你必须有一个支持SWIM接口的ST-Link编程器，ST-Link同时可以给STM32烧写程序，如果以后STM8满足不了你的需求，你也可以使用它烧写STM32。<img src="/2018/05/23/16-STM8%E5%8D%95%E7%89%87%E6%9C%BA%E4%BB%8B%E7%BB%8D/stlink.jpg" class=""><img src="/2018/05/23/16-STM8%E5%8D%95%E7%89%87%E6%9C%BA%E4%BB%8B%E7%BB%8D/stlink-inside.jpg" class=""></p><h3 id="声明"><a href="#声明" class="headerlink" title="声明"></a>声明</h3><p>这篇文章是译文，原文地址<a href="https://www.ondrovo.com/a/20170105-stm8-first-look/">点击这里</a>，原作者是<code>Ondřej Hruška</code>。此译文已获取原作者邮件授权，请仅用于学习用途，不允许转载，谢谢合作！</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;什么是STM8微控制器&quot;&gt;&lt;a href=&quot;#什么是STM8微控制器&quot; class=&quot;headerlink&quot; title=&quot;什么是STM8微控制器&quot;&gt;&lt;/a&gt;什么是STM8微控制器&lt;/h3&gt;&lt;p&gt;STM8是一款&lt;a href=&quot;http://www.st.com&quot;&gt;意法半导体&lt;/a&gt;制造的高性价比、低功耗的8位微控制器。在简单的应用中，可以取代Arduino或者ATMEGA。&lt;/p&gt;
&lt;p&gt;8位微控制器已经存在很长一段时间了，随着更加强大的芯片普及，8位微控制器渐渐不再成为大家的焦点，
但是，8位的微控制器一直没有完全离开我们的视野。&lt;/p&gt;
    
    </summary>
    
      <category term="单片机" scheme="https://blog.hungtcs.top/categories/%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
      <category term="STM8" scheme="https://blog.hungtcs.top/categories/%E5%8D%95%E7%89%87%E6%9C%BA/STM8/"/>
    
    
      <category term="STM8" scheme="https://blog.hungtcs.top/tags/STM8/"/>
    
  </entry>
  
  <entry>
    <title>15. 51单片机的定时计数器</title>
    <link href="https://blog.hungtcs.top/2018/05/22/15-51%E5%8D%95%E7%89%87%E6%9C%BA%E7%9A%84%E5%AE%9A%E6%97%B6%E8%AE%A1%E6%95%B0%E5%99%A8/"/>
    <id>https://blog.hungtcs.top/2018/05/22/15-51单片机的定时计数器/</id>
    <published>2018-05-22T13:06:11.000Z</published>
    <updated>2022-08-17T02:40:45.586Z</updated>
    
    <content type="html"><![CDATA[<h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>8051微控制器具有<code>timer0</code>和<code>timer1</code>两个定时计数器。使用定时计数器可以独立于单片机内部程序产生一个延时或用于计数。两个定时计数器都是16位宽的，因为8051单片机是8位架构，所以每个16位定时器分别由两个单独的8位寄存器构成。</p><p><em>STC89C52的文档上面说有3个16位定时器，不过这里以传统mcs-51为准</em></p><span id="more"></span><h3 id="主要寄存器的作用"><a href="#主要寄存器的作用" class="headerlink" title="主要寄存器的作用"></a>主要寄存器的作用</h3><table><thead><tr><th style="text-align:left">寄存器</th><th style="text-align:left">地址</th><th style="text-align:left">作用</th></tr></thead><tbody><tr><td style="text-align:left"><a href="#TL0-TH0-TL1-TH1">TL0</a></td><td style="text-align:left">0x8A</td><td style="text-align:left">定时器0低8位寄存器</td></tr><tr><td style="text-align:left"><a href="#TL0-TH0-TL1-TH1">TL1</a></td><td style="text-align:left">0x8B</td><td style="text-align:left">定时器1低8位寄存器</td></tr><tr><td style="text-align:left"><a href="#TL0-TH0-TL1-TH1">TH0</a></td><td style="text-align:left">0x8C</td><td style="text-align:left">定时器0高8位寄存器</td></tr><tr><td style="text-align:left"><a href="#TL0-TH0-TL1-TH1">TH1</a></td><td style="text-align:left">0x8D</td><td style="text-align:left">定时器1高8位寄存器</td></tr><tr><td style="text-align:left"><a href="#TCON-寄存器">TCON</a></td><td style="text-align:left">0x88</td><td style="text-align:left">定时器控制寄存器</td></tr><tr><td style="text-align:left"><a href="#TMOD-寄存器">TMOD</a></td><td style="text-align:left">0x89</td><td style="text-align:left">定时器工作方式寄存器</td></tr></tbody></table><h3 id="TL0-TH0-TL1-TH1"><a href="#TL0-TH0-TL1-TH1" class="headerlink" title="TL0 TH0 TL1 TH1"></a>TL0 TH0 TL1 TH1</h3><p>TH0 和 TL0 组合成timer0 16位定时器;TH1 和 TL1 组合成timer1 16位定时器</p><p><style>  .table-text-center {    th, td {      text-align: center;    }  }</style></p><table class="table-text-center">  <tr>    <td>7</td><td>6</td><td>5</td><td>4</td><td>3</td><td>2</td><td>1</td><td>0</td>    <td>7</td><td>6</td><td>5</td><td>4</td><td>3</td><td>2</td><td>1</td><td>0</td>  </tr>  <tr>    <td colspan="8">TH0</td>    <td colspan="8">TL0</td>  </tr></table><h3 id="TCON-寄存器"><a href="#TCON-寄存器" class="headerlink" title="TCON 寄存器"></a>TCON 寄存器</h3><table><thead><tr><th>7</th><th>6</th><th>5</th><th>4</th><th>3</th><th>2</th><th>1</th><th>0</th></tr></thead><tbody><tr><td>TF1</td><td>TR1</td><td>TF0</td><td>TR0</td><td>IE1</td><td>IT1</td><td>IE0</td><td>IT0</td></tr></tbody></table><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*  TCON  */</span></span><br><span class="line">__sbit __at (<span class="number">0x88</span>) IT0  ;</span><br><span class="line">__sbit __at (<span class="number">0x89</span>) IE0  ;</span><br><span class="line">__sbit __at (<span class="number">0x8A</span>) IT1  ;</span><br><span class="line">__sbit __at (<span class="number">0x8B</span>) IE1  ;</span><br><span class="line">__sbit __at (<span class="number">0x8C</span>) TR0  ;</span><br><span class="line">__sbit __at (<span class="number">0x8D</span>) TF0  ;</span><br><span class="line">__sbit __at (<span class="number">0x8E</span>) TR1  ;</span><br><span class="line">__sbit __at (<span class="number">0x8F</span>) TF1  ;</span><br></pre></td></tr></table></figure><h3 id="TMOD-寄存器"><a href="#TMOD-寄存器" class="headerlink" title="TMOD 寄存器"></a>TMOD 寄存器</h3><table><thead><tr><th>7</th><th>6</th><th>5</th><th>4</th><th>3</th><th>2</th><th>1</th><th>0</th></tr></thead><tbody><tr><td>T1_GATE</td><td>T1_CT</td><td>T1_M1</td><td>T1_M0</td><td>T0_GATE</td><td>T0_CT</td><td>T0_M1</td><td>T0_M0</td></tr></tbody></table><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* BIT definitions for bits that are not directly accessible */</span></span><br><span class="line"><span class="comment">/* TMOD bits */</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> T0_M0           0x01</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> T0_M1           0x02</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> T0_CT           0x04</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> T0_GATE         0x08</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> T1_M0           0x10</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> T1_M1           0x20</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> T1_CT           0x40</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> T1_GATE         0x80</span></span><br></pre></td></tr></table></figure><p>定时器的工作模式</p><table><thead><tr><th style="text-align:left">M1</th><th style="text-align:left">M0</th><th style="text-align:left">模式</th><th style="text-align:left">说明</th></tr></thead><tbody><tr><td style="text-align:left">0</td><td style="text-align:left">0</td><td style="text-align:left">0</td><td style="text-align:left">13位定时器/计数器, TL只使用低5位</td></tr><tr><td style="text-align:left">0</td><td style="text-align:left">1</td><td style="text-align:left">1</td><td style="text-align:left">16位定时器/计数器</td></tr><tr><td style="text-align:left">1</td><td style="text-align:left">0</td><td style="text-align:left">2</td><td style="text-align:left">8位定时器/计数器,可以自动装初值</td></tr><tr><td style="text-align:left">1</td><td style="text-align:left">1</td><td style="text-align:left">3</td><td style="text-align:left">T0分成单独两个8位计时器,此时T1不工作</td></tr></tbody></table><h3 id="最大值和初值计算方法"><a href="#最大值和初值计算方法" class="headerlink" title="最大值和初值计算方法"></a>最大值和初值计算方法</h3><p>此处以<code>11.0592MHz</code>晶震、定时器工作方式1为例</p><table><thead><tr><th>类别</th><th>计算方法</th></tr></thead><tbody><tr><td>最大值</td><td>65536 * 12 / 11.0592 = 71111us</td></tr><tr><td>50ms初值</td><td>65536 - 50000 / (12 / 11.0592) = 19456 = 4C00H</td></tr></tbody></table><h3 id="示例程序"><a href="#示例程序" class="headerlink" title="示例程序"></a>示例程序</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;mcs51/8051.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> count = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">// set timer 0 mode 1</span></span><br><span class="line">  TMOD = <span class="number">0x01</span>;</span><br><span class="line">  TH0 = <span class="number">0x4C</span>;</span><br><span class="line">  TL0 = <span class="number">0x00</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// start timer 0</span></span><br><span class="line">  TR0 = <span class="number">1</span>;</span><br><span class="line">  <span class="comment">// enable timer 0 interrupt</span></span><br><span class="line">  ET0 = <span class="number">1</span>;</span><br><span class="line">  <span class="comment">// enable all interrupt</span></span><br><span class="line">  EA = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">if</span>(count == <span class="number">20</span>)</span><br><span class="line">    P0_0 = !P0_0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  setup();</span><br><span class="line">  <span class="keyword">while</span>(<span class="number">1</span>) loop();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">timer0</span><span class="params">()</span> __interrupt 1</span><br><span class="line">&#123;</span><br><span class="line">  TH0 = <span class="number">0x4C</span>;</span><br><span class="line">  TL0 = <span class="number">0x00</span>;</span><br><span class="line">  count++;</span><br><span class="line">  <span class="keyword">if</span>(count　&gt; <span class="number">20</span>) count = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h3&gt;&lt;p&gt;8051微控制器具有&lt;code&gt;timer0&lt;/code&gt;和&lt;code&gt;timer1&lt;/code&gt;两个定时计数器。使用定时计数器可以独立于单片机内部程序产生一个延时或用于计数。两个定时计数器都是16位宽的，因为8051单片机是8位架构，所以每个16位定时器分别由两个单独的8位寄存器构成。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;STC89C52的文档上面说有3个16位定时器，不过这里以传统mcs-51为准&lt;/em&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="单片机" scheme="https://blog.hungtcs.top/categories/%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
      <category term="51单片机" scheme="https://blog.hungtcs.top/categories/%E5%8D%95%E7%89%87%E6%9C%BA/51%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
    
      <category term="定时器" scheme="https://blog.hungtcs.top/tags/%E5%AE%9A%E6%97%B6%E5%99%A8/"/>
    
      <category term="timer" scheme="https://blog.hungtcs.top/tags/timer/"/>
    
  </entry>
  
  <entry>
    <title>14. 在linux下给51单片机写程序</title>
    <link href="https://blog.hungtcs.top/2018/05/19/14-%E5%9C%A8linux%E4%B8%8B%E7%BB%9951%E5%8D%95%E7%89%87%E6%9C%BA%E5%86%99%E7%A8%8B%E5%BA%8F/"/>
    <id>https://blog.hungtcs.top/2018/05/19/14-在linux下给51单片机写程序/</id>
    <published>2018-05-18T16:10:46.000Z</published>
    <updated>2022-08-17T02:40:45.586Z</updated>
    
    <content type="html"><![CDATA[<h3 id="需要使用到的软件"><a href="#需要使用到的软件" class="headerlink" title="需要使用到的软件"></a>需要使用到的软件</h3><ul><li>sdcc<blockquote><p><a href="http://sdcc.sourceforge.net/">SDCC</a> (Small Device C Compiler)是一个优化的嵌入式ANSI C编译器，它支持的平台包括是英特尔<a href="https://zh.wikipedia.org/zh-hans/%E8%8B%B1%E7%89%B9%E7%88%BE8051">8051</a>、美信80DS390、Zilog Z80、摩托罗拉68HC08和微芯的PIC16及PIC18系列。<a href="http://sdcc.sourceforge.net/">SDCC</a>是自由开放源码软件，依照GNU通用公共许可证（GPL）分发。具体支持的芯片列表: <a href="https://zh.wikipedia.org/zh-hans/%E8%8B%B1%E7%89%B9%E7%88%BE8051">mcs51</a>、z80、z180、r2k、r3ka、gbz80、tlcs90、ds390、pic16、pic14、TININative、ds400、hc08、s08、<a href="https://en.wikipedia.org/wiki/STM8">stm8</a></p></blockquote></li><li><a href="https://github.com/laborer/stcflash">stcflash</a><blockquote><p>使用python编写的一个开源跨平台的stc单片机烧写工具</p></blockquote></li></ul><span id="more"></span><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><ol><li><p>安装sdcc与stcflashsdcc可以使用包管理器安装或通过源码安装。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install sdcc</span><br></pre></td></tr></table></figure><p>stcflash可以中github直接下载到本地，加入环境变量即可。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/laborer/stcflash/archive/master.zip</span><br><span class="line">unzip stcflash-master.zip</span><br><span class="line">cd stcflash-master</span><br><span class="line">mv stcflash.py stcflash</span><br><span class="line">sudo mv stcflash /usr/local/bin</span><br></pre></td></tr></table></figure><p>然后安装stcflash的依赖包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install python-serial</span><br></pre></td></tr></table></figure></li><li><p>使用sdcc风格的C语言编写程序，例如</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;mcs51/8051.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  __bit status = <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    P0_0 = status;</span><br><span class="line">    status = !status;</span><br><span class="line">    delay(<span class="number">1000</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>需要注意的是:</p><ul><li>sdcc中所有非C标准关键字都以两个下划线开头</li><li>单个引脚的表示使用下划线表示，例如<code>P3_2</code>，与keil的<code>^</code>不同</li><li>引用的头文件为<code>mcs51/8051.h</code></li></ul></li><li><p>编译程序和生成hex文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sdcc main.c -o main.ihx</span><br></pre></td></tr></table></figure><p>sdcc编译之后直接得到的是ihx文件，并不是51单片机需要的hex文件，所以需要使用packihx命令打包。packihx命令是在安装sdcc的时候附带安装的，所以可以直接使用。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">packihx main.ihx &gt; main.hex</span><br></pre></td></tr></table></figure></li><li><p>烧写程序到单片机</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo stcflash --port /dev/ttyUSB0 main.hex</span><br></pre></td></tr></table></figure><p>烧写的时候需要重新给单片机上电</p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;需要使用到的软件&quot;&gt;&lt;a href=&quot;#需要使用到的软件&quot; class=&quot;headerlink&quot; title=&quot;需要使用到的软件&quot;&gt;&lt;/a&gt;需要使用到的软件&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;sdcc&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://sdcc.sourceforge.net/&quot;&gt;SDCC&lt;/a&gt; (Small Device C Compiler)是一个优化的嵌入式ANSI C编译器，它支持的平台包括是英特尔&lt;a href=&quot;https://zh.wikipedia.org/zh-hans/%E8%8B%B1%E7%89%B9%E7%88%BE8051&quot;&gt;8051&lt;/a&gt;、美信80DS390、Zilog Z80、摩托罗拉68HC08和微芯的PIC16及PIC18系列。
&lt;a href=&quot;http://sdcc.sourceforge.net/&quot;&gt;SDCC&lt;/a&gt;是自由开放源码软件，依照GNU通用公共许可证（GPL）分发。
具体支持的芯片列表: &lt;a href=&quot;https://zh.wikipedia.org/zh-hans/%E8%8B%B1%E7%89%B9%E7%88%BE8051&quot;&gt;mcs51&lt;/a&gt;、z80、z180、r2k、r3ka、gbz80、tlcs90、ds390、pic16、pic14、TININative、ds400、hc08、s08、&lt;a href=&quot;https://en.wikipedia.org/wiki/STM8&quot;&gt;stm8&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/laborer/stcflash&quot;&gt;stcflash&lt;/a&gt;&lt;blockquote&gt;
&lt;p&gt;使用python编写的一个开源跨平台的stc单片机烧写工具&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="单片机" scheme="https://blog.hungtcs.top/categories/%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
      <category term="51单片机" scheme="https://blog.hungtcs.top/categories/%E5%8D%95%E7%89%87%E6%9C%BA/51%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
    
      <category term="linux" scheme="https://blog.hungtcs.top/tags/linux/"/>
    
      <category term="sdcc" scheme="https://blog.hungtcs.top/tags/sdcc/"/>
    
      <category term="stcflash" scheme="https://blog.hungtcs.top/tags/stcflash/"/>
    
  </entry>
  
  <entry>
    <title>13. 基于网页的室温监控系统</title>
    <link href="https://blog.hungtcs.top/2018/05/16/13-%E5%9F%BA%E4%BA%8E%E7%BD%91%E9%A1%B5%E7%9A%84%E5%AE%A4%E6%B8%A9%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F/"/>
    <id>https://blog.hungtcs.top/2018/05/16/13-基于网页的室温监控系统/</id>
    <published>2018-05-16T08:03:23.000Z</published>
    <updated>2022-08-17T02:40:45.585Z</updated>
    
    <content type="html"><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>周末使用 <code>ds18b20</code> 做了一个温度检测的装置，配合 <code>esp-01s</code> 可以把温度数据发送到服务器，为了查看方便做了这么一个页面。</p><h3 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h3><img src="/2018/05/16/13-%E5%9F%BA%E4%BA%8E%E7%BD%91%E9%A1%B5%E7%9A%84%E5%AE%A4%E6%B8%A9%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F/0.png" class=""><span id="more"></span><p><a href="http://temperature.hungtcs.top">点击这里查看</a></p><h3 id="录了个小视频介绍一下"><a href="#录了个小视频介绍一下" class="headerlink" title="录了个小视频介绍一下"></a>录了个小视频介绍一下</h3><iframe style="width:100%; height: 460px;" src="//player.bilibili.com/player.html?aid=23401411&cid=39008847&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><h3 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h3><ul><li><a href="https://github.com/hungtcs-lab/esp8266-temperature-statistics/tree/master/arduino-ds18b20">Arduino 项目文件</a></li><li><a href="https://github.com/hungtcs-lab/esp8266-temperature-statistics">服务端代码</a></li><li><a href="https://github.com/hungtcs-lab/esp8266-temperature-statistics-frontend">Web端代码</a></li></ul><p><em>希望对有同样需求的人有帮助</em></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h3&gt;&lt;p&gt;周末使用 &lt;code&gt;ds18b20&lt;/code&gt; 做了一个温度检测的装置，配合 &lt;code&gt;esp-01s&lt;/code&gt; 可以把温度数据发送到服务器，为了查看方便做了这么一个页面。&lt;/p&gt;
&lt;h3 id=&quot;效果图&quot;&gt;&lt;a href=&quot;#效果图&quot; class=&quot;headerlink&quot; title=&quot;效果图&quot;&gt;&lt;/a&gt;效果图&lt;/h3&gt;&lt;img src=&quot;/2018/05/16/13-%E5%9F%BA%E4%BA%8E%E7%BD%91%E9%A1%B5%E7%9A%84%E5%AE%A4%E6%B8%A9%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F/0.png&quot; class=&quot;&quot;&gt;
    
    </summary>
    
      <category term="JavaScript" scheme="https://blog.hungtcs.top/categories/JavaScript/"/>
    
    
      <category term="ds18b20" scheme="https://blog.hungtcs.top/tags/ds18b20/"/>
    
      <category term="室温监控" scheme="https://blog.hungtcs.top/tags/%E5%AE%A4%E6%B8%A9%E7%9B%91%E6%8E%A7/"/>
    
      <category term="智能家具" scheme="https://blog.hungtcs.top/tags/%E6%99%BA%E8%83%BD%E5%AE%B6%E5%85%B7/"/>
    
      <category term="esp8266" scheme="https://blog.hungtcs.top/tags/esp8266/"/>
    
  </entry>
  
  <entry>
    <title>12. DS18B20数字温度传感器</title>
    <link href="https://blog.hungtcs.top/2018/05/12/12-DS18B20%E6%95%B0%E5%AD%97%E6%B8%A9%E5%BA%A6%E4%BC%A0%E6%84%9F%E5%99%A8/"/>
    <id>https://blog.hungtcs.top/2018/05/12/12-DS18B20数字温度传感器/</id>
    <published>2018-05-12T06:01:35.000Z</published>
    <updated>2022-08-17T02:40:45.581Z</updated>
    
    <content type="html"><![CDATA[<h3 id="DS18B20-介绍"><a href="#DS18B20-介绍" class="headerlink" title="DS18B20 介绍"></a>DS18B20 介绍</h3><p>数字温度传感器 <code>DS18B20</code>。具有体积小、硬件开销低、抗干扰能力强、精度高的特点。常见的封装形式有：直插式、管道式、螺纹式、磁铁吸附式、不锈钢封装式等。DS18B20的测温范围可达<code>-55°C ~ +125°C</code>，在<code>-10°C ~ +85°C</code>范围时精度为<code>±0.5°C</code>，工作电压<code>3.0v ~ 5.0v</code>。</p><img src="/2018/05/12/12-DS18B20%E6%95%B0%E5%AD%97%E6%B8%A9%E5%BA%A6%E4%BC%A0%E6%84%9F%E5%99%A8/ds18b20.png" class=""><span id="more"></span><img src="/2018/05/12/12-DS18B20%E6%95%B0%E5%AD%97%E6%B8%A9%E5%BA%A6%E4%BC%A0%E6%84%9F%E5%99%A8/00.jpg" class=""><a href="/2018/05/12/12-DS18B20%E6%95%B0%E5%AD%97%E6%B8%A9%E5%BA%A6%E4%BC%A0%E6%84%9F%E5%99%A8/datasheet.pdf" title="文档链接">文档链接</a><h3 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h3><ul><li>独特的<code>1-Wire</code>接口只需要一个引脚进行通信</li><li>每个器件都有一个存储在板载ROM中的唯一64位串行代码</li><li>不需要其他外部辅助器件</li><li>可以从数据线供电</li><li>电源范围为3.0V至5.5V</li><li>测温范围从–55°C到+125°C (–67°F到+257°F)，–10°C到+85°C的精度为±0.5°C</li><li>分辨率9或12位可调</li><li>12位转换最多用时750ms</li><li>用户可定义的非易失性报警</li></ul><h3 id="单总线介绍"><a href="#单总线介绍" class="headerlink" title="单总线介绍"></a>单总线介绍</h3><blockquote><p>1-Wire是Maxim子公司达拉斯半导体的专利技术，仅用单一信号线就可像I²C、SPI一样，传输时钟（clock）又传输数据（data），并且数据传输是双向的。1-Wire使用较低的数据传输速率，通常是用来沟通小型设备，如数字温度计。<em>-- 维基百科</em></p></blockquote><h3 id="Arduino-如何使用-DS18B20"><a href="#Arduino-如何使用-DS18B20" class="headerlink" title="Arduino 如何使用 DS18B20"></a>Arduino 如何使用 DS18B20</h3><img src="/2018/05/12/12-DS18B20%E6%95%B0%E5%AD%97%E6%B8%A9%E5%BA%A6%E4%BC%A0%E6%84%9F%E5%99%A8/02.png" class=""><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;OneWire.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;DallasTemperature.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> ONE_WIRE_BUS = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="function">OneWire <span class="title">oneWire</span><span class="params">(ONE_WIRE_BUS)</span></span>;</span><br><span class="line"><span class="function">DallasTemperature <span class="title">sensors</span><span class="params">(&amp;oneWire)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setup</span><span class="params">(<span class="type">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  Serial.<span class="built_in">begin</span>(<span class="number">9600</span>);</span><br><span class="line">  sensors.<span class="built_in">begin</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">loop</span><span class="params">(<span class="type">void</span>)</span></span>&#123;</span><br><span class="line">  sensors.<span class="built_in">requestTemperatures</span>();</span><br><span class="line"></span><br><span class="line">  Serial.<span class="built_in">print</span>(<span class="string">&quot;Celsius temperature: &quot;</span>);</span><br><span class="line">  Serial.<span class="built_in">print</span>(sensors.<span class="built_in">getTempCByIndex</span>(<span class="number">0</span>));</span><br><span class="line">  Serial.<span class="built_in">print</span>(<span class="string">&quot; - Fahrenheit temperature: &quot;</span>);</span><br><span class="line">  Serial.<span class="built_in">println</span>(sensors.<span class="built_in">getTempFByIndex</span>(<span class="number">0</span>));</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="51单片机如何使用-DS18B20"><a href="#51单片机如何使用-DS18B20" class="headerlink" title="51单片机如何使用 DS18B20"></a>51单片机如何使用 DS18B20</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;mcs51/8051.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __nop() __asm nop __endasm</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ONE_BUS P2_0</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">delay_t</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> t)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">while</span>(t--);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">delay</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> t)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">signed</span> <span class="type">int</span> a, b;</span><br><span class="line">  <span class="keyword">for</span>(a=t; a&gt;<span class="number">0</span>; a--)</span><br><span class="line">    <span class="keyword">for</span>(b=<span class="number">125</span>; b&gt;<span class="number">0</span>; b--);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">__bit <span class="title function_">one_wire_init</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  __bit status = <span class="number">1</span>;</span><br><span class="line">  ONE_BUS = <span class="number">1</span>;</span><br><span class="line">  <span class="type">delay_t</span>(<span class="number">8</span>);</span><br><span class="line">  ONE_BUS = <span class="number">0</span>;</span><br><span class="line">  <span class="type">delay_t</span>(<span class="number">80</span>); <span class="comment">// 480us~960us</span></span><br><span class="line">  ONE_BUS = <span class="number">1</span>;</span><br><span class="line">  <span class="type">delay_t</span>(<span class="number">8</span>);</span><br><span class="line">  status = ONE_BUS;</span><br><span class="line">  <span class="type">delay_t</span>(<span class="number">4</span>); <span class="comment">// 60us~240us</span></span><br><span class="line">  <span class="keyword">return</span> status;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">one_wire_write_byte</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> data)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">unsigned</span> <span class="type">char</span> i;</span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="number">8</span>; i++)</span><br><span class="line">  &#123;</span><br><span class="line">    ONE_BUS = <span class="number">0</span>;</span><br><span class="line">    ONE_BUS = data &amp; <span class="number">0x01</span>;</span><br><span class="line">    <span class="type">delay_t</span>(<span class="number">4</span>); <span class="comment">// 15us~30us</span></span><br><span class="line">    ONE_BUS = <span class="number">1</span>;</span><br><span class="line">    data &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="type">delay_t</span>(<span class="number">4</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> <span class="title function_">one_wire_read_byte</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">unsigned</span> <span class="type">char</span> i = <span class="number">0</span>;</span><br><span class="line">  <span class="type">unsigned</span> <span class="type">char</span> data = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="number">8</span>; i++)</span><br><span class="line">  &#123;</span><br><span class="line">    ONE_BUS = <span class="number">0</span>;</span><br><span class="line">    data &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    ONE_BUS = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(ONE_BUS)</span><br><span class="line">    &#123;</span><br><span class="line">      data |= <span class="number">0x80</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">delay_t</span>(<span class="number">4</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> data;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">request_temperature</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  one_wire_init();</span><br><span class="line">  one_wire_write_byte(<span class="number">0xCC</span>);</span><br><span class="line">  one_wire_write_byte(<span class="number">0x44</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> <span class="title function_">get_temperature</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">unsigned</span> <span class="type">char</span> lsb, msb;</span><br><span class="line">  one_wire_init();</span><br><span class="line">  one_wire_write_byte(<span class="number">0xCC</span>);</span><br><span class="line">  one_wire_write_byte(<span class="number">0xBE</span>);</span><br><span class="line"></span><br><span class="line">  lsb = one_wire_read_byte();</span><br><span class="line">  msb = one_wire_read_byte();</span><br><span class="line"></span><br><span class="line">  msb &lt;&lt;= <span class="number">4</span>;</span><br><span class="line">  msb += (lsb &gt;&gt; <span class="number">4</span>);</span><br><span class="line">  <span class="keyword">return</span> msb;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">serial_init</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  TMOD |= <span class="number">0x20</span>;</span><br><span class="line">  SCON |= <span class="number">0x50</span>;</span><br><span class="line">  <span class="comment">// 波特率 9600</span></span><br><span class="line">  TH1 = <span class="number">0XFD</span>;</span><br><span class="line">  TL1 = <span class="number">0XFD</span>;</span><br><span class="line">  <span class="comment">// 启动定时器1</span></span><br><span class="line">  TR1=<span class="number">1</span>;</span><br><span class="line">  <span class="comment">//中断允许</span></span><br><span class="line">  EA=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">putchar</span><span class="params">(<span class="type">char</span> c)</span></span><br><span class="line">&#123;</span><br><span class="line">  SBUF = c;</span><br><span class="line">  <span class="keyword">while</span>(!TI);</span><br><span class="line">  TI = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  __bit status = <span class="number">1</span>;</span><br><span class="line">  serial_init();</span><br><span class="line">  status = one_wire_init();</span><br><span class="line">  <span class="keyword">if</span>(!status)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;invalid status\n&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">char</span> value = <span class="number">0</span>;</span><br><span class="line">  request_temperature();</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;value: %d \n&quot;</span>, get_temperature());</span><br><span class="line">  delay(<span class="number">500</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  setup();</span><br><span class="line">  <span class="keyword">while</span>(<span class="number">1</span>) loop();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="一些有用的链接"><a href="#一些有用的链接" class="headerlink" title="一些有用的链接"></a>一些有用的链接</h3><ul><li><a href="https://github.com/PaulStoffregen/OneWire">Arduino One Wire Library</a></li><li><a href="https://github.com/milesburton/Arduino-Temperature-Control-Library">Arduino Temperature Control Library</a></li><li><a href="https://create.arduino.cc/projecthub/TheGadgetBoy/ds18b20-digital-temperature-sensor-and-arduino-9cc806">DS18B20 Digital Temperature Sensor And Arduino</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;DS18B20-介绍&quot;&gt;&lt;a href=&quot;#DS18B20-介绍&quot; class=&quot;headerlink&quot; title=&quot;DS18B20 介绍&quot;&gt;&lt;/a&gt;DS18B20 介绍&lt;/h3&gt;&lt;p&gt;数字温度传感器 &lt;code&gt;DS18B20&lt;/code&gt;。
具有体积小、硬件开销低、抗干扰能力强、精度高的特点。
常见的封装形式有：直插式、管道式、螺纹式、磁铁吸附式、不锈钢封装式等。
DS18B20的测温范围可达&lt;code&gt;-55°C ~ +125°C&lt;/code&gt;，在&lt;code&gt;-10°C ~ +85°C&lt;/code&gt;范围时精度为&lt;code&gt;±0.5°C&lt;/code&gt;，工作电压&lt;code&gt;3.0v ~ 5.0v&lt;/code&gt;。&lt;/p&gt;
&lt;img src=&quot;/2018/05/12/12-DS18B20%E6%95%B0%E5%AD%97%E6%B8%A9%E5%BA%A6%E4%BC%A0%E6%84%9F%E5%99%A8/ds18b20.png&quot; class=&quot;&quot;&gt;
    
    </summary>
    
      <category term="电子器件" scheme="https://blog.hungtcs.top/categories/%E7%94%B5%E5%AD%90%E5%99%A8%E4%BB%B6/"/>
    
      <category term="温度传感器" scheme="https://blog.hungtcs.top/categories/%E7%94%B5%E5%AD%90%E5%99%A8%E4%BB%B6/%E6%B8%A9%E5%BA%A6%E4%BC%A0%E6%84%9F%E5%99%A8/"/>
    
      <category term="数字温度传感器" scheme="https://blog.hungtcs.top/categories/%E7%94%B5%E5%AD%90%E5%99%A8%E4%BB%B6/%E6%B8%A9%E5%BA%A6%E4%BC%A0%E6%84%9F%E5%99%A8/%E6%95%B0%E5%AD%97%E6%B8%A9%E5%BA%A6%E4%BC%A0%E6%84%9F%E5%99%A8/"/>
    
    
      <category term="ds18b20" scheme="https://blog.hungtcs.top/tags/ds18b20/"/>
    
      <category term="温度传感器" scheme="https://blog.hungtcs.top/tags/%E6%B8%A9%E5%BA%A6%E4%BC%A0%E6%84%9F%E5%99%A8/"/>
    
      <category term="数字温度传感器" scheme="https://blog.hungtcs.top/tags/%E6%95%B0%E5%AD%97%E6%B8%A9%E5%BA%A6%E4%BC%A0%E6%84%9F%E5%99%A8/"/>
    
      <category term="单总线" scheme="https://blog.hungtcs.top/tags/%E5%8D%95%E6%80%BB%E7%BA%BF/"/>
    
  </entry>
  
  <entry>
    <title>11. 如何使用esp-01s继电器模块 和 我的WIFI控制电灯整体解决方案</title>
    <link href="https://blog.hungtcs.top/2018/05/08/11-%E6%88%91%E7%9A%84WIFI%E6%8E%A7%E5%88%B6%E7%94%B5%E7%81%AF%E6%95%B4%E4%BD%93%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <id>https://blog.hungtcs.top/2018/05/08/11-我的WIFI控制电灯整体解决方案/</id>
    <published>2018-05-08T08:23:45.000Z</published>
    <updated>2022-08-17T02:40:45.580Z</updated>
    
    <content type="html"><![CDATA[<h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>如何用WIFI控制家里的电灯？最简单的方法是使用ESP-01s和配套的relay模块。<img src="/2018/05/08/11-%E6%88%91%E7%9A%84WIFI%E6%8E%A7%E5%88%B6%E7%94%B5%E7%81%AF%E6%95%B4%E4%BD%93%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/esp-01s.webp" class=""><span id="more"></span><img src="/2018/05/08/11-%E6%88%91%E7%9A%84WIFI%E6%8E%A7%E5%88%B6%E7%94%B5%E7%81%AF%E6%95%B4%E4%BD%93%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/relay.webp" class=""></p><h3 id="配置Arduino-IDE使其支持esp8266芯片"><a href="#配置Arduino-IDE使其支持esp8266芯片" class="headerlink" title="配置Arduino IDE使其支持esp8266芯片"></a>配置Arduino IDE使其支持esp8266芯片</h3><ol><li>打开 <code>文件/首选项/附加开发板管理器网址</code>，添加下面的URL<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://arduino.esp8266.com/stable/package_esp8266com_index.json</span><br></pre></td></tr></table></figure></li><li>打开工具/开发板/开发板管理器，安装esp8266开发板<img src="/2018/05/08/11-%E6%88%91%E7%9A%84WIFI%E6%8E%A7%E5%88%B6%E7%94%B5%E7%81%AF%E6%95%B4%E4%BD%93%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/0.png" class=""></li></ol><p>Github: <a href="https://github.com/esp8266/arduino">esp8266/arduino</a></p><h3 id="需要使用的工具"><a href="#需要使用的工具" class="headerlink" title="需要使用的工具"></a>需要使用的工具</h3><ul><li><code>usb-ttl</code>一个 (须支持3.3v)</li><li>杜邦线若干</li><li>面包板一个</li></ul><h3 id="对-ESP-01S-烧写程序的方法"><a href="#对-ESP-01S-烧写程序的方法" class="headerlink" title="对 ESP-01S 烧写程序的方法"></a>对 ESP-01S 烧写程序的方法</h3><table><thead><tr><th style="text-align:left"><code>esp-01s</code>引脚</th><th style="text-align:left">对应<code>usb-ttl</code>引脚</th></tr></thead><tbody><tr><td style="text-align:left">3.3v</td><td style="text-align:left">3.3v</td></tr><tr><td style="text-align:left">GND</td><td style="text-align:left">GND</td></tr><tr><td style="text-align:left">IO0</td><td style="text-align:left">GND</td></tr><tr><td style="text-align:left">IO2</td><td style="text-align:left">NC</td></tr><tr><td style="text-align:left">EN</td><td style="text-align:left">3.3v</td></tr><tr><td style="text-align:left">RST</td><td style="text-align:left">NC</td></tr><tr><td style="text-align:left">TX</td><td style="text-align:left">RX</td></tr><tr><td style="text-align:left">RX</td><td style="text-align:left">TX</td></tr></tbody></table><p><strong>esp-01s会在上电的瞬间检查IO0的电平，如果IO0为低点平则进入烧写模式，否则进入正常运行模式。</strong><strong>所以在烧写之前需要先断开esp-01s的Vcc链接，当Arduino-IDE出现开始上传的提示时插入Vcc。</strong><strong>烧写完成后，断开IO0与GND的连接，重新接通Vcc进入正常运行模式。</strong></p><h3 id="Arduino-IDE-程序"><a href="#Arduino-IDE-程序" class="headerlink" title="Arduino IDE 程序"></a>Arduino IDE 程序</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ESP8266WebServer.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ESP8266HTTPClient.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* SSID = <span class="string">&quot;********&quot;</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* PASSWORD = <span class="string">&quot;********&quot;</span>;</span><br><span class="line"></span><br><span class="line">HTTPClient http;</span><br><span class="line"><span class="function">ESP8266WebServer <span class="title">server</span><span class="params">(<span class="number">80</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> relay = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function">String <span class="title">getStatusJSON</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  String json = <span class="string">&quot;&#123; \&quot;status\&quot;: 0, \&quot;data\&quot;: &#123; \&quot;status\&quot;: &quot;</span>;</span><br><span class="line">  json += <span class="built_in">digitalRead</span>(relay);</span><br><span class="line">  json += <span class="string">&quot; &#125; &#125;&quot;</span>;</span><br><span class="line">  <span class="keyword">return</span> json;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">connectWiFi</span><span class="params">(<span class="type">const</span> <span class="type">char</span> *ssid, <span class="type">const</span> <span class="type">char</span> *password)</span> </span>&#123;</span><br><span class="line">  WiFi.<span class="built_in">begin</span>(ssid, password);</span><br><span class="line">  Serial.<span class="built_in">printf</span>(<span class="string">&quot;connecting to %s\n&quot;</span>, SSID);</span><br><span class="line">  <span class="keyword">while</span> (WiFi.<span class="built_in">status</span>() != WL_CONNECTED) &#123;</span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">500</span>);</span><br><span class="line">    Serial.<span class="built_in">print</span>(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  Serial.<span class="built_in">printf</span>(<span class="string">&quot;\nconnected to %s\n&quot;</span>, ssid);</span><br><span class="line">  Serial.<span class="built_in">print</span>(<span class="string">&quot;ip address is: &quot;</span>);</span><br><span class="line">  Serial.<span class="built_in">println</span>(WiFi.<span class="built_in">localIP</span>());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setup</span><span class="params">(<span class="type">void</span>)</span></span>&#123;</span><br><span class="line">  Serial.<span class="built_in">begin</span>(<span class="number">115200</span>);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">pinMode</span>(relay, OUTPUT);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(relay, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">  WiFi.<span class="built_in">mode</span>(WIFI_STA);</span><br><span class="line">  <span class="built_in">connectWiFi</span>(SSID, PASSWORD);</span><br><span class="line"></span><br><span class="line">  server.<span class="built_in">on</span>(<span class="string">&quot;/on&quot;</span>, []() &#123;</span><br><span class="line">    <span class="built_in">digitalWrite</span>(relay, LOW);</span><br><span class="line">    server.<span class="built_in">send</span>(<span class="number">200</span>, <span class="string">&quot;text/json&quot;</span>, <span class="built_in">getStatusJSON</span>());</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  server.<span class="built_in">on</span>(<span class="string">&quot;/off&quot;</span>, []() &#123;</span><br><span class="line">    <span class="built_in">digitalWrite</span>(relay, HIGH);</span><br><span class="line">    server.<span class="built_in">send</span>(<span class="number">200</span>, <span class="string">&quot;text/json&quot;</span>, <span class="built_in">getStatusJSON</span>());</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  server.<span class="built_in">on</span>(<span class="string">&quot;/status&quot;</span>, []() &#123;</span><br><span class="line">    server.<span class="built_in">send</span>(<span class="number">200</span>, <span class="string">&quot;text/json&quot;</span>, <span class="built_in">getStatusJSON</span>());</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  server.<span class="built_in">onNotFound</span>([]() &#123;</span><br><span class="line">    server.<span class="built_in">send</span>(<span class="number">404</span>, <span class="string">&quot;text/plain&quot;</span>, <span class="string">&quot;Not Found&quot;</span>);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  server.<span class="built_in">begin</span>();</span><br><span class="line">  Serial.<span class="built_in">println</span>(<span class="string">&quot;HTTP server started&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">loop</span><span class="params">(<span class="type">void</span>)</span></span>&#123;</span><br><span class="line">  <span class="keyword">while</span> (WiFi.<span class="built_in">status</span>() == WL_CONNECT_FAILED || WiFi.<span class="built_in">status</span>() == WL_CONNECTION_LOST || WiFi.<span class="built_in">status</span>() == WL_DISCONNECTED) &#123;</span><br><span class="line">    Serial.<span class="built_in">printf</span>(<span class="string">&quot;reconnect to %s\n&quot;</span>, SSID);</span><br><span class="line">    <span class="built_in">connectWiFi</span>(SSID, PASSWORD);</span><br><span class="line">  &#125;</span><br><span class="line">  server.<span class="built_in">handleClient</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="我的完整解决方案"><a href="#我的完整解决方案" class="headerlink" title="我的完整解决方案"></a>我的完整解决方案</h3><iframe width="560" height="315" src="https://www.youtube.com/embed/vCTM-Y2L2Yg" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen></iframe><iframe width="100%;" height="462" src="//player.bilibili.com/player.html?aid=23103523&cid=38435705&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen> </iframe><h3 id="视频中的源代码"><a href="#视频中的源代码" class="headerlink" title="视频中的源代码"></a>视频中的源代码</h3><ul><li><a href="https://github.com/hungtcs-lab/ionic-esp01-relay-controller">https://github.com/hungtcs-lab/ionic-esp01-relay-controller</a></li><li><a href="https://github.com/hungtcs-lab/esp01-relay-manager">https://github.com/hungtcs-lab/esp01-relay-manager</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h3&gt;&lt;p&gt;如何用WIFI控制家里的电灯？最简单的方法是使用ESP-01s和配套的relay模块。
&lt;img src=&quot;/2018/05/08/11-%E6%88%91%E7%9A%84WIFI%E6%8E%A7%E5%88%B6%E7%94%B5%E7%81%AF%E6%95%B4%E4%BD%93%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/esp-01s.webp&quot; class=&quot;&quot;&gt;
    
    </summary>
    
      <category term="单片机" scheme="https://blog.hungtcs.top/categories/%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
      <category term="esp8266" scheme="https://blog.hungtcs.top/categories/%E5%8D%95%E7%89%87%E6%9C%BA/esp8266/"/>
    
    
      <category term="esp-01s" scheme="https://blog.hungtcs.top/tags/esp-01s/"/>
    
      <category term="智能家居" scheme="https://blog.hungtcs.top/tags/%E6%99%BA%E8%83%BD%E5%AE%B6%E5%B1%85/"/>
    
      <category term="WIFI Module" scheme="https://blog.hungtcs.top/tags/WIFI-Module/"/>
    
  </entry>
  
  <entry>
    <title>10. GateOne安装后启动报错的解决方法</title>
    <link href="https://blog.hungtcs.top/2018/04/25/10-GateOne%E5%AE%89%E8%A3%85%E5%90%8E%E5%90%AF%E5%8A%A8%E6%8A%A5%E9%94%99%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    <id>https://blog.hungtcs.top/2018/04/25/10-GateOne安装后启动报错的解决方法/</id>
    <published>2018-04-25T05:08:47.000Z</published>
    <updated>2022-08-17T02:40:45.580Z</updated>
    
    <content type="html"><![CDATA[<h3 id="错误日志"><a href="#错误日志" class="headerlink" title="错误日志"></a>错误日志</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">Traceback (most recent call last):</span><br><span class="line">  File &quot;/usr/local/bin/gateone&quot;, line 9, in &lt;module&gt;</span><br><span class="line">    load_entry_point(&#x27;gateone==1.2.0&#x27;, &#x27;console_scripts&#x27;, &#x27;gateone&#x27;)()</span><br><span class="line">  File &quot;/usr/lib/python2.7/dist-packages/pkg_resources/__init__.py&quot;, line 542, in load_entry_point</span><br><span class="line">    return get_distribution(dist).load_entry_point(group, name)</span><br><span class="line">  File &quot;/usr/lib/python2.7/dist-packages/pkg_resources/__init__.py&quot;, line 2569, in load_entry_point</span><br><span class="line">    return ep.load()</span><br><span class="line">  File &quot;/usr/lib/python2.7/dist-packages/pkg_resources/__init__.py&quot;, line 2229, in load</span><br><span class="line">    return self.resolve()</span><br><span class="line">  File &quot;/usr/lib/python2.7/dist-packages/pkg_resources/__init__.py&quot;, line 2235, in resolve</span><br><span class="line">    module = __import__(self.module_name, fromlist=[&#x27;__name__&#x27;], level=0)</span><br><span class="line">  File &quot;/usr/local/lib/python2.7/dist-packages/gateone-1.2.0-py2.7.egg/gateone/core/server.py&quot;, line 402, in &lt;module&gt;</span><br><span class="line">    from gateone.auth.authorization import require, authenticated, policies</span><br><span class="line">  File &quot;/usr/local/lib/python2.7/dist-packages/gateone-1.2.0-py2.7.egg/gateone/auth/authorization.py&quot;, line 38, in &lt;module&gt;</span><br><span class="line">    @memoize</span><br><span class="line">  File &quot;/usr/local/lib/python2.7/dist-packages/gateone-1.2.0-py2.7.egg/gateone/core/utils.py&quot;, line 290, in __init__</span><br><span class="line">    MEMO = AutoExpireDict(timeout=timeout, interval=&quot;30s&quot;)</span><br><span class="line">  File &quot;/usr/local/lib/python2.7/dist-packages/gateone-1.2.0-py2.7.egg/gateone/core/utils.py&quot;, line 161, in __init__</span><br><span class="line">    self.interval = kwargs.pop(&#x27;interval&#x27;)</span><br><span class="line">  File &quot;/usr/local/lib/python2.7/dist-packages/gateone-1.2.0-py2.7.egg/gateone/core/utils.py&quot;, line 211, in interval</span><br><span class="line">    self._timeout_checker, value, io_loop=self.io_loop)</span><br><span class="line">TypeError: __init__() got an unexpected keyword argument &#x27;io_loop&#x27;</span><br><span class="line">Exception AttributeError: &quot;&#x27;AutoExpireDict&#x27; object has no attribute &#x27;_key_watcher&#x27;&quot; in &lt;bound method AutoExpireDict.__del__ of &#123;&#125;&gt; ignored</span><br></pre></td></tr></table></figure><span id="more"></span><h3 id="产生原因"><a href="#产生原因" class="headerlink" title="产生原因"></a>产生原因</h3><p>由于<code>tornado</code>最新版本与旧版本不兼容导致</p><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p>安装4.5版本<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pip install tornado==4.5.3</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;错误日志&quot;&gt;&lt;a href=&quot;#错误日志&quot; class=&quot;headerlink&quot; title=&quot;错误日志&quot;&gt;&lt;/a&gt;错误日志&lt;/h3&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Traceback (most recent call last):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  File &amp;quot;/usr/local/bin/gateone&amp;quot;, line 9, in &amp;lt;module&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    load_entry_point(&amp;#x27;gateone==1.2.0&amp;#x27;, &amp;#x27;console_scripts&amp;#x27;, &amp;#x27;gateone&amp;#x27;)()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  File &amp;quot;/usr/lib/python2.7/dist-packages/pkg_resources/__init__.py&amp;quot;, line 542, in load_entry_point&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return get_distribution(dist).load_entry_point(group, name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  File &amp;quot;/usr/lib/python2.7/dist-packages/pkg_resources/__init__.py&amp;quot;, line 2569, in load_entry_point&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return ep.load()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  File &amp;quot;/usr/lib/python2.7/dist-packages/pkg_resources/__init__.py&amp;quot;, line 2229, in load&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return self.resolve()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  File &amp;quot;/usr/lib/python2.7/dist-packages/pkg_resources/__init__.py&amp;quot;, line 2235, in resolve&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    module = __import__(self.module_name, fromlist=[&amp;#x27;__name__&amp;#x27;], level=0)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  File &amp;quot;/usr/local/lib/python2.7/dist-packages/gateone-1.2.0-py2.7.egg/gateone/core/server.py&amp;quot;, line 402, in &amp;lt;module&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    from gateone.auth.authorization import require, authenticated, policies&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  File &amp;quot;/usr/local/lib/python2.7/dist-packages/gateone-1.2.0-py2.7.egg/gateone/auth/authorization.py&amp;quot;, line 38, in &amp;lt;module&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @memoize&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  File &amp;quot;/usr/local/lib/python2.7/dist-packages/gateone-1.2.0-py2.7.egg/gateone/core/utils.py&amp;quot;, line 290, in __init__&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    MEMO = AutoExpireDict(timeout=timeout, interval=&amp;quot;30s&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  File &amp;quot;/usr/local/lib/python2.7/dist-packages/gateone-1.2.0-py2.7.egg/gateone/core/utils.py&amp;quot;, line 161, in __init__&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    self.interval = kwargs.pop(&amp;#x27;interval&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  File &amp;quot;/usr/local/lib/python2.7/dist-packages/gateone-1.2.0-py2.7.egg/gateone/core/utils.py&amp;quot;, line 211, in interval&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    self._timeout_checker, value, io_loop=self.io_loop)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;TypeError: __init__() got an unexpected keyword argument &amp;#x27;io_loop&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Exception AttributeError: &amp;quot;&amp;#x27;AutoExpireDict&amp;#x27; object has no attribute &amp;#x27;_key_watcher&amp;#x27;&amp;quot; in &amp;lt;bound method AutoExpireDict.__del__ of &amp;#123;&amp;#125;&amp;gt; ignored&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://blog.hungtcs.top/categories/Linux/"/>
    
      <category term="Softwares" scheme="https://blog.hungtcs.top/categories/Linux/Softwares/"/>
    
    
      <category term="GateOne" scheme="https://blog.hungtcs.top/tags/GateOne/"/>
    
      <category term="Web SSH" scheme="https://blog.hungtcs.top/tags/Web-SSH/"/>
    
  </entry>
  
  <entry>
    <title>9. 74HC595的使用方法(STM8S控制)</title>
    <link href="https://blog.hungtcs.top/2018/04/17/9-74HC595%E7%9A%84%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95-STM8S%E6%8E%A7%E5%88%B6/"/>
    <id>https://blog.hungtcs.top/2018/04/17/9-74HC595的使用方法-STM8S控制/</id>
    <published>2018-04-17T06:51:13.000Z</published>
    <updated>2022-08-17T02:40:45.609Z</updated>
    
    <content type="html"><![CDATA[<h3 id="器件简介"><a href="#器件简介" class="headerlink" title="器件简介"></a>器件简介</h3><blockquote><p>74HC595是一个8位串行输入、并行输出的位移缓存器：并行输出为三态输出。在SCK 的上升沿，串行数据由SDL输入到内部的8位位移缓存器，并由Q7’输出，而并行输出则是在LCK的上升沿将在8位位移缓存器的数据存入到8位并行输出缓存器。当串行数据输入端OE的控制信号为低使能时，并行输出端的输出值等于并行输出缓存器所存储的值。而当OE为高电位，也就是输出关闭时，并行输出端会维持在高阻抗状态。</p></blockquote><span id="more"></span><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdint.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm8s.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __nop() __asm nop __endasm</span></span><br><span class="line"></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> data = <span class="number">0x01</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">delay</span><span class="params">()</span> &#123;</span><br><span class="line">  <span class="type">uint32_t</span> i;</span><br><span class="line">  <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="number">5000</span>; i++)</span><br><span class="line">    __asm nop __endasm;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  PD_DDR = <span class="number">0xFF</span>;</span><br><span class="line">  PD_CR1 = <span class="number">0xFF</span>;</span><br><span class="line">  PD_CR2 = <span class="number">0x00</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">unsigned</span> <span class="type">char</span> i;</span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="number">8</span>; i++)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span>((data &gt;&gt; i) &amp; <span class="number">0x01</span>)</span><br><span class="line">      PD_ODR |= <span class="number">0x08</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      PD_ODR &amp;= <span class="number">0xF7</span>;</span><br><span class="line">    PD_ODR &amp;= <span class="number">0xFB</span>;</span><br><span class="line">    __nop(); __nop(); __nop(); __nop(); __nop();</span><br><span class="line">    PD_ODR |= <span class="number">0x04</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  PD_ODR &amp;= <span class="number">0xFD</span>;</span><br><span class="line">  __nop(); __nop(); __nop(); __nop(); __nop();</span><br><span class="line">  PD_ODR |= <span class="number">0x02</span>;</span><br><span class="line"></span><br><span class="line">  data &lt;&lt;= <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span>(data == <span class="number">0</span>) data = <span class="number">0x01</span>;</span><br><span class="line">  delay();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  setup();</span><br><span class="line">  <span class="keyword">while</span>(<span class="number">1</span>) loop();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// 编译</span><br><span class="line">sdcc -mstm8 -lstm8 --out-fmt-ihx -o build/ main.c</span><br><span class="line">// 烧写</span><br><span class="line">sudo stm8flash -c stlinkv2 -p stm8s103f3 -w build/main.ihx</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;器件简介&quot;&gt;&lt;a href=&quot;#器件简介&quot; class=&quot;headerlink&quot; title=&quot;器件简介&quot;&gt;&lt;/a&gt;器件简介&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;74HC595是一个8位串行输入、并行输出的位移缓存器：并行输出为三态输出。
在SCK 的上升沿，串行数据由SDL输入到内部的8位位移缓存器，并由Q7’输出，而并行输出则是在LCK的上升沿将在8位位移缓存器的数据存入到8位并行输出缓存器。
当串行数据输入端OE的控制信号为低使能时，并行输出端的输出值等于并行输出缓存器所存储的值。
而当OE为高电位，也就是输出关闭时，并行输出端会维持在高阻抗状态。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="单片机" scheme="https://blog.hungtcs.top/categories/%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
      <category term="STM8单片机" scheme="https://blog.hungtcs.top/categories/%E5%8D%95%E7%89%87%E6%9C%BA/STM8%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
    
      <category term="74HC595" scheme="https://blog.hungtcs.top/tags/74HC595/"/>
    
  </entry>
  
  <entry>
    <title>8. 51单片机使用PCF8591(ADC/DAC)的方法(AD篇)</title>
    <link href="https://blog.hungtcs.top/2018/04/07/8-51%E5%8D%95%E7%89%87%E6%9C%BA%E4%BD%BF%E7%94%A8PCF8591-ADC-DAC-%E7%9A%84%E6%96%B9%E6%B3%95-IIC%E6%8E%A5%E5%8F%A3/"/>
    <id>https://blog.hungtcs.top/2018/04/07/8-51单片机使用PCF8591-ADC-DAC-的方法-IIC接口/</id>
    <published>2018-04-07T12:52:08.000Z</published>
    <updated>2022-08-17T02:40:45.608Z</updated>
    
    <content type="html"><![CDATA[<h3 id="PCF8591介绍"><a href="#PCF8591介绍" class="headerlink" title="PCF8591介绍"></a>PCF8591介绍</h3><blockquote><p>PCF8591 是具有 I2C 总线接口的 8 位 A/D 及 D/A 转换器。有 4 路 A/D 转换输入,1 路 D/A 模拟输出。这就是说,它既可以作 A/D 转换也可以作 D/A 转换。A/D 转换为逐次比较型。电源电压典型值为 5V。</p></blockquote><span id="more"></span><blockquote><p>I2C 总线是 Philips 公司推出的新型单片机系统。它采用串行总线,主控器与外围器件仅靠两条线进行信息传输,一条称为时钟线(SCL),另一条位数据线(SDA)。I2C 总线单片机系统较通用单片机系统电路简单。由普通 CPU 芯片同 I2C 专用器件组成的系统为模拟 I2C 系统,它性能稳定,价格较低,目前已得到广泛应用。</p></blockquote><a href="/2018/04/07/8-51%E5%8D%95%E7%89%87%E6%9C%BA%E4%BD%BF%E7%94%A8PCF8591-ADC-DAC-%E7%9A%84%E6%96%B9%E6%B3%95-IIC%E6%8E%A5%E5%8F%A3/PCF8591.pdf" title="文档链接">文档链接</a><h3 id="PCF8591引脚"><a href="#PCF8591引脚" class="headerlink" title="PCF8591引脚"></a>PCF8591引脚</h3><img src="/2018/04/07/8-51%E5%8D%95%E7%89%87%E6%9C%BA%E4%BD%BF%E7%94%A8PCF8591-ADC-DAC-%E7%9A%84%E6%96%B9%E6%B3%95-IIC%E6%8E%A5%E5%8F%A3/1.png" class=""><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// file: main.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;8051.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;iic.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">// 定时器工作模式设置</span></span><br><span class="line">  <span class="comment">// 定时器0为工作模式1 用于计时</span></span><br><span class="line">  <span class="comment">// 定时器1为工作模式2 用于串口</span></span><br><span class="line">  TMOD = <span class="number">0x20</span>;</span><br><span class="line">  <span class="comment">// 设置串口为模式1</span></span><br><span class="line">  <span class="comment">// SM0 0</span></span><br><span class="line">  <span class="comment">// SM1 1</span></span><br><span class="line">  SCON |= <span class="number">0x50</span>;</span><br><span class="line">  <span class="comment">// 设置定时器1初值和自动装载值</span></span><br><span class="line">  <span class="comment">// 波特率 9600</span></span><br><span class="line">  TH1 = <span class="number">0XFD</span>;</span><br><span class="line">  TL1 = <span class="number">0XFD</span>;</span><br><span class="line">  <span class="comment">// 启动定时器1</span></span><br><span class="line">  TR1=<span class="number">1</span>;</span><br><span class="line">  <span class="comment">//中断允许</span></span><br><span class="line">  EA=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">  SDA = <span class="number">1</span>;</span><br><span class="line">  SCL = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">unsigned</span> <span class="type">char</span> data;</span><br><span class="line">  iic_start();</span><br><span class="line">  iic_send_byte(<span class="number">0x90</span>);</span><br><span class="line">  iic_send_byte(<span class="number">0x04</span>);</span><br><span class="line"></span><br><span class="line">  iic_start();</span><br><span class="line">  iic_send_byte(<span class="number">0x91</span>);</span><br><span class="line"></span><br><span class="line">  iic_receive_byte();</span><br><span class="line">  iic_ack(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">  data = iic_receive_byte();</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;value 1: %d  &quot;</span>, data);</span><br><span class="line">  iic_ack(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">  data = iic_receive_byte();</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;value 2: %d  &quot;</span>, data);</span><br><span class="line">  iic_ack(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">  data = iic_receive_byte();</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;value 3: %d  &quot;</span>, data);</span><br><span class="line">  iic_ack(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">  data = iic_receive_byte();</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;value 4: %d\n&quot;</span>, data);</span><br><span class="line">  iic_ack(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">  iic_stop();</span><br><span class="line">  delay(<span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  setup();</span><br><span class="line">  <span class="keyword">while</span>(<span class="number">1</span>) loop();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">putchar</span><span class="params">(<span class="type">char</span> c)</span></span><br><span class="line">&#123;</span><br><span class="line">  SBUF = c;</span><br><span class="line">  <span class="keyword">while</span>(!TI);</span><br><span class="line">  TI = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// iic.h</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;8051.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __IIC_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __IIC_H__</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SDA P1_2</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SCL P1_7</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __nop __asm nop __endasm</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> <span class="type">void</span> <span class="title function_">iic_start</span><span class="params">()</span>;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">void</span> <span class="title function_">iic_stop</span><span class="params">()</span>;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">void</span> <span class="title function_">iic_ack</span><span class="params">(__bit ack)</span>;</span><br><span class="line"><span class="keyword">extern</span> __bit <span class="title function_">iic_send_byte</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> data)</span>;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">unsigned</span> <span class="type">char</span> <span class="title function_">iic_receive_byte</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span>  <span class="comment">// __IIC_H__</span></span></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// file: iic.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;iic.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">iic_start</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  SDA = <span class="number">1</span>;</span><br><span class="line">  SCL = <span class="number">1</span>;</span><br><span class="line">  __nop; __nop; __nop; __nop; __nop;</span><br><span class="line">  SDA = <span class="number">0</span>;</span><br><span class="line">  __nop; __nop; __nop; __nop; __nop;</span><br><span class="line">  SCL = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">iic_stop</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  SDA = <span class="number">0</span>;</span><br><span class="line">  SCL = <span class="number">1</span>;</span><br><span class="line">  __nop; __nop; __nop; __nop; __nop;</span><br><span class="line">  SDA = <span class="number">1</span>;</span><br><span class="line">  __nop; __nop; __nop; __nop; __nop;</span><br><span class="line">  <span class="comment">// SCL = 0;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">iic_ack</span><span class="params">(__bit ack)</span></span><br><span class="line">&#123;</span><br><span class="line">  SDA = ack;</span><br><span class="line">  SCL = <span class="number">1</span>;</span><br><span class="line">  __nop; __nop; __nop; __nop; __nop;</span><br><span class="line">  SCL = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">__bit <span class="title function_">iic_send_byte</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> data)</span></span><br><span class="line">&#123;</span><br><span class="line">  __bit ack;</span><br><span class="line">  <span class="type">unsigned</span> <span class="type">char</span> i;</span><br><span class="line">  SCL = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="number">8</span>; i++)</span><br><span class="line">  &#123;</span><br><span class="line">    SDA = data &amp; <span class="number">0x80</span>;</span><br><span class="line">    data &lt;&lt;= <span class="number">1</span>;</span><br><span class="line">    SCL = <span class="number">1</span>;</span><br><span class="line">    __nop; __nop; __nop; __nop; __nop;</span><br><span class="line">    SCL = <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  SDA = <span class="number">1</span>;</span><br><span class="line">  SCL = <span class="number">1</span>;</span><br><span class="line">  __nop; __nop; __nop; __nop; __nop;</span><br><span class="line">  ack = SDA;</span><br><span class="line">  SCL = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">return</span> ack;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> <span class="title function_">iic_receive_byte</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">unsigned</span> <span class="type">char</span> i, data = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="number">8</span>; i++)</span><br><span class="line">  &#123;</span><br><span class="line">    SDA = <span class="number">1</span>;</span><br><span class="line">    SCL = <span class="number">1</span>;</span><br><span class="line">    data &lt;&lt;= <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(SDA == <span class="number">1</span>) &#123;</span><br><span class="line">      data |= <span class="number">0x01</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    SCL = <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> data;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// file: delay.h</span></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __DELAY_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __DELAY_H__</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">delay</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> time)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">unsigned</span> <span class="type">char</span> i, j;</span><br><span class="line">  <span class="keyword">while</span>(time--)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">3</span>; i&gt;<span class="number">0</span>; i--)</span><br><span class="line">      <span class="keyword">for</span>(j=<span class="number">100</span>; j&gt;<span class="number">0</span>; j--);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span>  <span class="comment">// __DELAY_H__</span></span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;PCF8591介绍&quot;&gt;&lt;a href=&quot;#PCF8591介绍&quot; class=&quot;headerlink&quot; title=&quot;PCF8591介绍&quot;&gt;&lt;/a&gt;PCF8591介绍&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;PCF8591 是具有 I2C 总线接口的 8 位 A/D 及 D/A 转换器。
有 4 路 A/D 转换输入,1 路 D/A 模拟输出。
这就是说,它既可以作 A/D 转换也可以作 D/A 转换。
A/D 转换为逐次比较型。
电源电压典型值为 5V。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="单片机" scheme="https://blog.hungtcs.top/categories/%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
      <category term="51单片机" scheme="https://blog.hungtcs.top/categories/%E5%8D%95%E7%89%87%E6%9C%BA/51%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
    
      <category term="PCF8591" scheme="https://blog.hungtcs.top/tags/PCF8591/"/>
    
      <category term="AD" scheme="https://blog.hungtcs.top/tags/AD/"/>
    
      <category term="DA" scheme="https://blog.hungtcs.top/tags/DA/"/>
    
      <category term="模数转换" scheme="https://blog.hungtcs.top/tags/%E6%A8%A1%E6%95%B0%E8%BD%AC%E6%8D%A2/"/>
    
  </entry>
  
  <entry>
    <title>7. 51单片机使用LCD12864液晶屏（串行方式）</title>
    <link href="https://blog.hungtcs.top/2018/04/05/7-51%E5%8D%95%E7%89%87%E6%9C%BA%E4%BD%BF%E7%94%A8LCD12864%E6%B6%B2%E6%99%B6%E5%B1%8F%EF%BC%88%E4%B8%B2%E8%A1%8C%EF%BC%89/"/>
    <id>https://blog.hungtcs.top/2018/04/05/7-51单片机使用LCD12864液晶屏（串行）/</id>
    <published>2018-04-05T06:33:37.000Z</published>
    <updated>2022-08-17T02:40:45.602Z</updated>
    
    <content type="html"><![CDATA[<h3 id="模块介绍"><a href="#模块介绍" class="headerlink" title="模块介绍"></a>模块介绍</h3><blockquote><p>液晶显示模块是 128×64 点阵的汉字图形型液晶显示模块，可显示汉字及图形，内置 8192 个中文汉字（16X16 点阵）、128 个字符（8X16 点阵）及 64X256 点阵显示 RAM（GDRAM）。可与 CPU 直接接口，提供两种界面来连接微处理机：8位并行及串行两种连接方式。具有多种功能：光标显示、画面移位、睡眠模式等。</p></blockquote><p><em><strong>此实例采用串行方式</strong></em></p><span id="more"></span><p>并行方式请查看： <a href="/2018/04/04/6-51%E5%8D%95%E7%89%87%E6%9C%BA%E4%BD%BF%E7%94%A8LCD12864%E6%B6%B2%E6%99%B6%E5%B1%8F/" title="6. 51单片机使用LCD12864液晶屏（8位并行）">6. 51单片机使用LCD12864液晶屏（8位并行）</a></p><a href="/2018/04/05/7-51%E5%8D%95%E7%89%87%E6%9C%BA%E4%BD%BF%E7%94%A8LCD12864%E6%B6%B2%E6%99%B6%E5%B1%8F%EF%BC%88%E4%B8%B2%E8%A1%8C%EF%BC%89/LCD12864.pdf" title="文档链接">文档链接</a><h3 id="引脚定义"><a href="#引脚定义" class="headerlink" title="引脚定义"></a>引脚定义</h3><img src="/2018/04/05/7-51%E5%8D%95%E7%89%87%E6%9C%BA%E4%BD%BF%E7%94%A8LCD12864%E6%B6%B2%E6%99%B6%E5%B1%8F%EF%BC%88%E4%B8%B2%E8%A1%8C%EF%BC%89/5.png" class=""><h3 id="串行时序"><a href="#串行时序" class="headerlink" title="串行时序"></a>串行时序</h3><img src="/2018/04/05/7-51%E5%8D%95%E7%89%87%E6%9C%BA%E4%BD%BF%E7%94%A8LCD12864%E6%B6%B2%E6%99%B6%E5%B1%8F%EF%BC%88%E4%B8%B2%E8%A1%8C%EF%BC%89/6.png" class=""><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * lcd12864_write_data</span></span><br><span class="line"><span class="comment"> * lcd12864_write_command</span></span><br><span class="line"><span class="comment"> * 方法与并行不同，其他部分基本一致</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;8052.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> CS        P0_0</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SID       P0_1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SCLK      P0_2</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">lcd12864_write</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> data)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">unsigned</span> <span class="type">char</span> i;</span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="number">8</span>; i++)</span><br><span class="line">  &#123;</span><br><span class="line">    SCLK = <span class="number">0</span>;</span><br><span class="line">    SID = data &amp; <span class="number">0x80</span>;</span><br><span class="line">    data &lt;&lt;= <span class="number">1</span>;</span><br><span class="line">    SCLK = <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">lcd12864_write_command</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> command)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">// RW = 0; RS = 0</span></span><br><span class="line">  lcd12864_write(<span class="number">0xF8</span>);</span><br><span class="line">  lcd12864_write(command &amp; <span class="number">0xF0</span>);</span><br><span class="line">  lcd12864_write((command &lt;&lt; <span class="number">4</span>) &amp; <span class="number">0xF0</span>);</span><br><span class="line">  delay_50us(<span class="number">4</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">lcd12864_write_data</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> data)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">// RW = 0; RS = 1</span></span><br><span class="line">  lcd12864_write(<span class="number">0xFA</span>);</span><br><span class="line">  lcd12864_write(data &amp; <span class="number">0xF0</span>);</span><br><span class="line">  lcd12864_write((data &lt;&lt; <span class="number">4</span>) &amp; <span class="number">0xF0</span>);</span><br><span class="line">  delay_50us(<span class="number">4</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">lcd12864_initialization</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  CS = <span class="number">1</span>;</span><br><span class="line">  delay(<span class="number">100</span>);</span><br><span class="line">  lcd12864_write_command(<span class="number">0x30</span>);</span><br><span class="line">  delay_50us(<span class="number">4</span>);</span><br><span class="line">  lcd12864_write_command(<span class="number">0x30</span>);</span><br><span class="line">  delay_50us(<span class="number">4</span>);</span><br><span class="line">  lcd12864_write_command(<span class="number">0x0f</span>);</span><br><span class="line">  delay_50us(<span class="number">4</span>);</span><br><span class="line">  lcd12864_write_command(<span class="number">0x01</span>);</span><br><span class="line">  delay(<span class="number">15</span>);</span><br><span class="line">  lcd12864_write_command(<span class="number">0x06</span>);</span><br><span class="line">  CS = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">display_chinese_characters</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">// 您好！</span></span><br><span class="line">  <span class="comment">// 从字符表查到的编码</span></span><br><span class="line">  <span class="type">unsigned</span> <span class="type">char</span> table[] = &#123; <span class="number">0xC4</span>, <span class="number">0xFA</span>, <span class="number">0xBA</span>, <span class="number">0xC3</span>, <span class="number">0xA3</span>, <span class="number">0xA1</span> &#125;;</span><br><span class="line">  <span class="type">unsigned</span> <span class="type">char</span> i;</span><br><span class="line">  CS = <span class="number">1</span>;</span><br><span class="line">  <span class="comment">// 第二行地址从0x90开始</span></span><br><span class="line">  lcd12864_write_command(<span class="number">0x90</span>);</span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="keyword">sizeof</span>(table); i++)</span><br><span class="line">  &#123;</span><br><span class="line">    lcd12864_write_data(table[i]);</span><br><span class="line">  &#125;</span><br><span class="line">  CS = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">display_ascii</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">unsigned</span> <span class="type">char</span> i;</span><br><span class="line">  <span class="type">unsigned</span> <span class="type">char</span> table[] = <span class="string">&quot;hello world!&quot;</span>;</span><br><span class="line">  CS = <span class="number">1</span>;</span><br><span class="line">  <span class="comment">// 第一行地址从0x80开始</span></span><br><span class="line">  lcd12864_write_command(<span class="number">0x80</span>);</span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="keyword">sizeof</span>(table); i++)</span><br><span class="line">  &#123;</span><br><span class="line">    lcd12864_write_data(table[i]);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 接着是第三行，第三行地址从0x88开始</span></span><br><span class="line">  lcd12864_write_command(<span class="number">0x88</span>);</span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="keyword">sizeof</span>(table); i++)</span><br><span class="line">  &#123;</span><br><span class="line">    lcd12864_write_data(table[i]);</span><br><span class="line">  &#125;</span><br><span class="line">  CS = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  lcd12864_initialization();</span><br><span class="line">  display_ascii();</span><br><span class="line">  display_chinese_characters();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  setup();</span><br><span class="line">  <span class="keyword">while</span>(<span class="number">1</span>) loop();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;模块介绍&quot;&gt;&lt;a href=&quot;#模块介绍&quot; class=&quot;headerlink&quot; title=&quot;模块介绍&quot;&gt;&lt;/a&gt;模块介绍&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;液晶显示模块是 128×64 点阵的汉字图形型液晶显示模块，可显示汉字及图形，
内置 8192 个中文汉字（16X16 点阵）、128 个字符（8X16 点阵）及 64X256 点阵显示 RAM（GDRAM）。
可与 CPU 直接接口，提供两种界面来连接微处理机：8位并行及串行两种连接方式。
具有多种功能：光标显示、画面移位、睡眠模式等。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;此实例采用串行方式&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="单片机" scheme="https://blog.hungtcs.top/categories/%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
      <category term="51单片机" scheme="https://blog.hungtcs.top/categories/%E5%8D%95%E7%89%87%E6%9C%BA/51%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
    
      <category term="LCD12864" scheme="https://blog.hungtcs.top/tags/LCD12864/"/>
    
  </entry>
  
</feed>
